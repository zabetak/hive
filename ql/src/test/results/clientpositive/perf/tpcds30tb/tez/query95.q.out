Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
Map 12 <- Reducer 7 (BROADCAST_EDGE)
Map 13 <- Reducer 6 (BROADCAST_EDGE)
Map 16 <- Reducer 6 (BROADCAST_EDGE)
Reducer 14 <- Map 13 (CUSTOM_SIMPLE_EDGE), Map 16 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 1 (CUSTOM_SIMPLE_EDGE), Reducer 14 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Reducer 8 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 15 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 12 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_276]
        Group By Operator [GBY_275] (rows=1 width=232)
          Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
        <-Reducer 4 [CUSTOM_SIMPLE_EDGE] vectorized, llap
          PARTITION_ONLY_SHUFFLE [RS_274]
            Group By Operator [GBY_273] (rows=1 width=232)
              Output:["_col0","_col1","_col2"],aggregations:["count(_col0)","sum(_col1)","sum(_col2)"]
              Group By Operator [GBY_272] (rows=2159952 width=232)
                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
              <-Reducer 3 [SIMPLE_EDGE] llap
                SHUFFLE [RS_102]
                  PartitionCols:_col0
                  Group By Operator [GBY_101] (rows=2159952 width=232)
                    Output:["_col0","_col2","_col3"],aggregations:["sum(_col1)","sum(_col2)"],keys:_col0
                    Merge Join Operator [MERGEJOIN_211] (rows=6463723 width=138)
                      Conds:RS_252._col0=RS_271._col0(Left Semi),Output:["_col0","_col1","_col2"]
                    <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                      PARTITION_ONLY_SHUFFLE [RS_252]
                        PartitionCols:_col0
                        Map Join Operator [MAPJOIN_251] (rows=6463723 width=138)
                          Conds:RS_237.KEY.reducesinkkey0=RS_250.KEY.reducesinkkey0(Left Semi),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2"]
                        <-Reducer 8 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_250]
                            PartitionCols:_col0
                            Group By Operator [GBY_249] (rows=21600036511 width=8)
                              Output:["_col0"],keys:_col0
                              Select Operator [SEL_248] (rows=258749294920 width=8)
                                Output:["_col0"]
                                Filter Operator [FIL_247] (rows=258749294920 width=23)
                                  predicate:(_col0 <> _col2)
                                  Map Join Operator [MAPJOIN_246] (rows=258749294920 width=23)
                                    Conds:RS_231.KEY.reducesinkkey0=RS_245.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2"]
                                  <-Map 12 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_245]
                                      PartitionCols:_col1
                                      Select Operator [SEL_244] (rows=21600036511 width=15)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_243] (rows=21600036511 width=15)
                                          predicate:(ws_order_number BETWEEN DynamicValue(RS_47_ws1_ws_order_number_min) AND DynamicValue(RS_47_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_47_ws1_ws_order_number_bloom_filter)))
                                          TableScan [TS_24] (rows=21600036511 width=15)
                                            default@web_sales,ws2, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                          <-Reducer 7 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_242]
                                              Group By Operator [GBY_241] (rows=1 width=24)
                                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_240]
                                                  Group By Operator [GBY_239] (rows=1 width=24)
                                                    Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                    Select Operator [SEL_238] (rows=6463723 width=8)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_236] (rows=6463723 width=138)
                                                        Output:["_col0","_col1","_col2"]
                                                        Map Join Operator [MAPJOIN_235] (rows=6463723 width=138)
                                                          Conds:MAPJOIN_234._col0=RS_227._col0(Inner),Output:["_col3","_col4","_col5"]
                                                        <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                                          BROADCAST [RS_227]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_226] (rows=8116 width=64)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_225] (rows=8116 width=64)
                                                                predicate:CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1999-05-01 00:00:00' AND TIMESTAMP'1999-06-30 00:00:00'
                                                                TableScan [TS_9] (rows=73049 width=64)
                                                                  default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                                        <-Map Join Operator [MAPJOIN_234] (rows=58177483 width=228)
                                                            Conds:MAPJOIN_233._col2=RS_224._col0(Inner),Output:["_col0","_col3","_col4","_col5"]
                                                          <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                            BROADCAST [RS_224]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_223] (rows=12 width=8)
                                                                Output:["_col0"]
                                                                Filter Operator [FIL_222] (rows=12 width=96)
                                                                  predicate:(web_company_name = 'pri                                               ')
                                                                  TableScan [TS_6] (rows=84 width=96)
                                                                    default@web_site,web_site, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["web_site_sk","web_company_name"]
                                                          <-Map Join Operator [MAPJOIN_233] (rows=407242361 width=246)
                                                              Conds:SEL_230._col1=RS_221._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col5"]
                                                            <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                                              BROADCAST [RS_221]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_220] (rows=754717 width=8)
                                                                  Output:["_col0"]
                                                                  Filter Operator [FIL_219] (rows=754717 width=94)
                                                                    predicate:(ca_state = 'TX')
                                                                    TableScan [TS_3] (rows=40000000 width=94)
                                                                      default@customer_address,customer_address, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                                                            <-Select Operator [SEL_230] (rows=21583844790 width=255)
                                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                                Filter Operator [FIL_228] (rows=21583844790 width=255)
                                                                  predicate:(ws_ship_addr_sk is not null and ws_web_site_sk is not null and ws_ship_date_sk is not null)
                                                                  TableScan [TS_0] (rows=21600036511 width=255)
                                                                    default@web_sales,ws1, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_ship_date_sk","ws_ship_addr_sk","ws_web_site_sk","ws_order_number","ws_ext_ship_cost","ws_net_profit","ws_warehouse_sk"]
                                  <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_231]
                                      PartitionCols:_col1
                                      Select Operator [SEL_229] (rows=21600036511 width=15)
                                        Output:["_col0","_col1"]
                                         Please refer to the previous TableScan [TS_0]
                        <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_237]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_236]
                    <-Reducer 15 [SIMPLE_EDGE] vectorized, llap
                      SHUFFLE [RS_271]
                        PartitionCols:_col0
                        Group By Operator [GBY_270] (rows=309959254381 width=8)
                          Output:["_col0"],keys:_col0
                          Select Operator [SEL_269] (rows=309959254381 width=8)
                            Output:["_col0"]
                            Filter Operator [FIL_268] (rows=309959254381 width=23)
                              predicate:(_col0 <> _col3)
                              Map Join Operator [MAPJOIN_267] (rows=309959254381 width=23)
                                Conds:RS_266.KEY.reducesinkkey0=RS_232.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col2","_col3"]
                              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                PARTITION_ONLY_SHUFFLE [RS_232]
                                  PartitionCols:_col1
                                   Please refer to the previous Select Operator [SEL_229]
                              <-Reducer 14 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                PARTITION_ONLY_SHUFFLE [RS_266]
                                  PartitionCols:_col1
                                  Map Join Operator [MAPJOIN_265] (rows=25874973741 width=23)
                                    Conds:RS_261.KEY.reducesinkkey0=RS_264.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2"]
                                  <-Map 16 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_264]
                                      PartitionCols:_col0
                                      Select Operator [SEL_263] (rows=2160007345 width=8)
                                        Output:["_col0"]
                                        Filter Operator [FIL_262] (rows=2160007345 width=8)
                                          predicate:(wr_order_number BETWEEN DynamicValue(RS_52_ws1_ws_order_number_min) AND DynamicValue(RS_52_ws1_ws_order_number_max) and in_bloom_filter(wr_order_number, DynamicValue(RS_52_ws1_ws_order_number_bloom_filter)))
                                          TableScan [TS_33] (rows=2160007345 width=8)
                                            default@web_returns,web_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_order_number"]
                                          <-Reducer 6 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_258]
                                              Group By Operator [GBY_256] (rows=1 width=24)
                                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                              <-Reducer 2 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_255]
                                                  Group By Operator [GBY_254] (rows=1 width=24)
                                                    Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                    Select Operator [SEL_253] (rows=6463723 width=8)
                                                      Output:["_col0"]
                                                       Please refer to the previous Map Join Operator [MAPJOIN_251]
                                  <-Map 13 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_261]
                                      PartitionCols:_col1
                                      Select Operator [SEL_260] (rows=21600036511 width=15)
                                        Output:["_col0","_col1"]
                                        Filter Operator [FIL_259] (rows=21600036511 width=15)
                                          predicate:(ws_order_number BETWEEN DynamicValue(RS_52_ws1_ws_order_number_min) AND DynamicValue(RS_52_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_52_ws1_ws_order_number_bloom_filter)))
                                          TableScan [TS_31] (rows=21600036511 width=15)
                                            default@web_sales,ws1, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                          <-Reducer 6 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_257]
                                               Please refer to the previous Group By Operator [GBY_256]

