Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 10 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
Map 11 <- Reducer 7 (BROADCAST_EDGE)
Map 12 <- Reducer 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 11 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Map 12 (CUSTOM_SIMPLE_EDGE), Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 1 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_165]
        Group By Operator [GBY_164] (rows=1 width=232)
          Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
        <-Reducer 4 [CUSTOM_SIMPLE_EDGE] vectorized, llap
          PARTITION_ONLY_SHUFFLE [RS_163]
            Group By Operator [GBY_162] (rows=1 width=232)
              Output:["_col0","_col1","_col2"],aggregations:["count(_col0)","sum(_col1)","sum(_col2)"]
              Group By Operator [GBY_161] (rows=2159952 width=232)
                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
              <-Reducer 3 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_160]
                  PartitionCols:_col0
                  Group By Operator [GBY_159] (rows=2159952 width=232)
                    Output:["_col0","_col2","_col3"],aggregations:["sum(_col5)","sum(_col6)"],keys:_col4
                    Map Join Operator [MAPJOIN_158] (rows=6463723 width=138)
                      Conds:RS_35.KEY.reducesinkkey0=RS_157.KEY.reducesinkkey0(Anti),DynamicPartitionHashJoin:true,Output:["_col4","_col5","_col6"]
                    <-Map 12 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                      PARTITION_ONLY_SHUFFLE [RS_157]
                        PartitionCols:_col0
                        Group By Operator [GBY_156] (rows=2160007345 width=8)
                          Output:["_col0"],keys:_col0
                          Select Operator [SEL_155] (rows=2160007345 width=8)
                            Output:["_col0"]
                            Filter Operator [FIL_154] (rows=2160007345 width=8)
                              predicate:(wr_order_number BETWEEN DynamicValue(RS_35_ws1_ws_order_number_min) AND DynamicValue(RS_35_ws1_ws_order_number_max) and in_bloom_filter(wr_order_number, DynamicValue(RS_35_ws1_ws_order_number_bloom_filter)))
                              TableScan [TS_25] (rows=2160007345 width=8)
                                default@web_returns,wr1, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_order_number"]
                              <-Reducer 6 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_153]
                                  Group By Operator [GBY_152] (rows=1 width=24)
                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                  <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
                                    PARTITION_ONLY_SHUFFLE [RS_113]
                                      Group By Operator [GBY_112] (rows=1 width=24)
                                        Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                        Select Operator [SEL_111] (rows=6463723 width=16)
                                          Output:["_col0"]
                                          Select Operator [SEL_32] (rows=6463723 width=139)
                                            Output:["_col4","_col5","_col6"]
                                            Map Join Operator [MAPJOIN_121] (rows=6463723 width=141)
                                              Conds:RS_142.KEY.reducesinkkey0=RS_151.KEY.reducesinkkey0(Left Semi),DynamicPartitionHashJoin:true,Output:["_col3","_col4","_col5","_col6","_col14"],residual filter predicates:{(_col3 <> _col14)}
                                            <-Map 11 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                              PARTITION_ONLY_SHUFFLE [RS_151]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_150] (rows=21594635145 width=15)
                                                  Output:["_col0","_col1"],keys:_col0, _col1
                                                  Select Operator [SEL_149] (rows=21594635145 width=15)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_148] (rows=21594635145 width=15)
                                                      predicate:(ws_warehouse_sk is not null and ws_order_number BETWEEN DynamicValue(RS_29_ws1_ws_order_number_min) AND DynamicValue(RS_29_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_29_ws1_ws_order_number_bloom_filter)))
                                                      TableScan [TS_22] (rows=21600036511 width=15)
                                                        default@web_sales,ws2, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                                      <-Reducer 7 [BROADCAST_EDGE] vectorized, llap
                                                        BROADCAST [RS_147]
                                                          Group By Operator [GBY_146] (rows=1 width=24)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                          <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                            PARTITION_ONLY_SHUFFLE [RS_145]
                                                              Group By Operator [GBY_144] (rows=1 width=24)
                                                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                Select Operator [SEL_143] (rows=6463723 width=16)
                                                                  Output:["_col0"]
                                                                  Map Join Operator [MAPJOIN_141] (rows=6463723 width=139)
                                                                    Conds:MAPJOIN_140._col0=RS_136._col0(Inner),Output:["_col3","_col4","_col5","_col6"]
                                                                  <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                                    BROADCAST [RS_136]
                                                                      PartitionCols:_col0
                                                                      Select Operator [SEL_135] (rows=8116 width=64)
                                                                        Output:["_col0"]
                                                                        Filter Operator [FIL_134] (rows=8116 width=64)
                                                                          predicate:CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1999-05-01 00:00:00' AND TIMESTAMP'1999-06-30 00:00:00'
                                                                          TableScan [TS_9] (rows=73049 width=64)
                                                                            default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                                                  <-Map Join Operator [MAPJOIN_140] (rows=58177483 width=236)
                                                                      Conds:MAPJOIN_139._col2=RS_133._col0(Inner),Output:["_col0","_col3","_col4","_col5","_col6"]
                                                                    <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                                                      BROADCAST [RS_133]
                                                                        PartitionCols:_col0
                                                                        Select Operator [SEL_132] (rows=12 width=142)
                                                                          Output:["_col0"]
                                                                          Filter Operator [FIL_131] (rows=12 width=96)
                                                                            predicate:(web_company_name = 'pri                                               ')
                                                                            TableScan [TS_6] (rows=84 width=96)
                                                                              default@web_site,web_site, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["web_site_sk","web_company_name"]
                                                                    <-Map Join Operator [MAPJOIN_139] (rows=407242361 width=254)
                                                                        Conds:SEL_138._col1=RS_130._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col5","_col6"]
                                                                      <-Map 8 [BROADCAST_EDGE] vectorized, llap
                                                                        BROADCAST [RS_130]
                                                                          PartitionCols:_col0
                                                                          Select Operator [SEL_129] (rows=754717 width=94)
                                                                            Output:["_col0"]
                                                                            Filter Operator [FIL_128] (rows=754717 width=94)
                                                                              predicate:(ca_state = 'TX')
                                                                              TableScan [TS_3] (rows=40000000 width=94)
                                                                                default@customer_address,customer_address, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                                                                      <-Select Operator [SEL_138] (rows=21583844790 width=263)
                                                                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                                                          Filter Operator [FIL_137] (rows=21583844790 width=263)
                                                                            predicate:(ws_ship_addr_sk is not null and ws_web_site_sk is not null and ws_ship_date_sk is not null)
                                                                            TableScan [TS_0] (rows=21600036511 width=263)
                                                                              default@web_sales,ws1, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_ship_date_sk","ws_ship_addr_sk","ws_web_site_sk","ws_warehouse_sk","ws_order_number","ws_ext_ship_cost","ws_net_profit"]
                                            <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                              PARTITION_ONLY_SHUFFLE [RS_142]
                                                PartitionCols:_col4
                                                 Please refer to the previous Map Join Operator [MAPJOIN_141]
                    <-Reducer 2 [CUSTOM_SIMPLE_EDGE] llap
                      PARTITION_ONLY_SHUFFLE [RS_35]
                        PartitionCols:_col4
                         Please refer to the previous Select Operator [SEL_32]

