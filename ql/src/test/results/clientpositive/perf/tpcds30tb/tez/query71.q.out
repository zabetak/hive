Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 10 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 6 <- Map 10 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Reducer 11 (BROADCAST_EDGE), Union 2 (CONTAINS)
Map 8 <- Map 10 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE), Reducer 11 (BROADCAST_EDGE), Union 2 (CONTAINS)
Reducer 11 <- Map 10 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Union 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 vectorized, llap
      File Output Operator [FS_208]
        Select Operator [SEL_207] (rows=11813956 width=223)
          Output:["_col0","_col1","_col2","_col3","_col4"]
        <-Reducer 3 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_206]
            Select Operator [SEL_205] (rows=11813956 width=227)
              Output:["_col1","_col2","_col3","_col4","_col5"]
              Group By Operator [GBY_204] (rows=11813956 width=223)
                Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
              <-Union 2 [SIMPLE_EDGE]
                <-Map 1 [CONTAINS] vectorized, llap
                  Reduce Output Operator [RS_203]
                    PartitionCols:_col0, _col1, _col2, _col3
                    Group By Operator [GBY_202] (rows=11813956 width=223)
                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col0)"],keys:_col4, _col5, _col7, _col8
                      Map Join Operator [MAPJOIN_201] (rows=11813956 width=112)
                        Conds:MAPJOIN_200._col2=RS_193._col0(Inner),Output:["_col0","_col4","_col5","_col7","_col8"]
                      <-Map 12 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_193]
                          PartitionCols:_col0
                          Select Operator [SEL_192] (rows=43200 width=16)
                            Output:["_col0","_col1","_col2"]
                            Filter Operator [FIL_191] (rows=43200 width=103)
                              predicate:(t_meal_time) IN ('breakfast           ', 'dinner              ')
                              TableScan [TS_35] (rows=86400 width=103)
                                default@time_dim,time_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["t_time_sk","t_hour","t_minute","t_meal_time"]
                      <-Map Join Operator [MAPJOIN_200] (rows=23627911 width=104)
                          Conds:SEL_199._col1=RS_185._col0(Inner),Output:["_col0","_col2","_col4","_col5"]
                        <-Map 10 [BROADCAST_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_185]
                            PartitionCols:_col0
                            Select Operator [SEL_184] (rows=4442 width=111)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_183] (rows=4442 width=115)
                                predicate:(i_manager_id = 1)
                                TableScan [TS_32] (rows=462000 width=115)
                                  default@item,item, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand_id","i_brand","i_manager_id"]
                        <-Select Operator [SEL_199] (rows=366561230 width=127)
                            Output:["_col0","_col1","_col2"]
                            Map Join Operator [MAPJOIN_198] (rows=366561230 width=127)
                              Conds:SEL_197._col3=RS_179._col0(Inner),Output:["_col0","_col1","_col2"]
                            <-Map 5 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_179]
                                PartitionCols:_col0
                                Select Operator [SEL_178] (rows=31 width=8)
                                  Output:["_col0"]
                                  Filter Operator [FIL_177] (rows=31 width=16)
                                    predicate:((d_year = 2001) and (d_moy = 12))
                                    TableScan [TS_3] (rows=73049 width=16)
                                      default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                              Dynamic Partitioning Event Operator [EVENT_182] (rows=15 width=8)
                                Group By Operator [GBY_181] (rows=15 width=8)
                                  Output:["_col0"],keys:_col0
                                  Select Operator [SEL_180] (rows=31 width=8)
                                    Output:["_col0"]
                                     Please refer to the previous Select Operator [SEL_178]
                            <-Select Operator [SEL_197] (rows=21591935919 width=135)
                                Output:["_col0","_col1","_col2","_col3"]
                                Filter Operator [FIL_196] (rows=21591935919 width=135)
                                  predicate:ws_sold_time_sk is not null
                                  TableScan [TS_129] (rows=21594638446 width=135)
                                    default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_time_sk","ws_item_sk","ws_ext_sales_price"]
                <-Map 6 [CONTAINS] vectorized, llap
                  Reduce Output Operator [RS_225]
                    PartitionCols:_col0, _col1, _col2, _col3
                    Group By Operator [GBY_224] (rows=11813956 width=223)
                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col0)"],keys:_col4, _col5, _col7, _col8
                      Map Join Operator [MAPJOIN_223] (rows=11813956 width=112)
                        Conds:MAPJOIN_222._col2=RS_194._col0(Inner),Output:["_col0","_col4","_col5","_col7","_col8"]
                      <-Map 12 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_194]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_192]
                      <-Map Join Operator [MAPJOIN_222] (rows=23627911 width=104)
                          Conds:SEL_221._col1=RS_187._col0(Inner),Output:["_col0","_col2","_col4","_col5"]
                        <-Map 10 [BROADCAST_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_187]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_184]
                        <-Select Operator [SEL_221] (rows=723126157 width=110)
                            Output:["_col0","_col1","_col2"]
                            Map Join Operator [MAPJOIN_220] (rows=723126157 width=110)
                              Conds:SEL_219._col3=RS_211._col0(Inner),Output:["_col0","_col1","_col2"]
                            <-Map 7 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_211]
                                PartitionCols:_col0
                                Select Operator [SEL_210] (rows=31 width=8)
                                  Output:["_col0"]
                                  Filter Operator [FIL_209] (rows=31 width=16)
                                    predicate:((d_year = 2001) and (d_moy = 12))
                                    TableScan [TS_13] (rows=73049 width=16)
                                      default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                              Dynamic Partitioning Event Operator [EVENT_214] (rows=15 width=8)
                                Group By Operator [GBY_213] (rows=15 width=8)
                                  Output:["_col0"],keys:_col0
                                  Select Operator [SEL_212] (rows=31 width=8)
                                    Output:["_col0"]
                                     Please refer to the previous Select Operator [SEL_210]
                            <-Select Operator [SEL_219] (rows=42898297550 width=135)
                                Output:["_col0","_col1","_col2","_col3"]
                                Filter Operator [FIL_218] (rows=42898297550 width=135)
                                  predicate:(cs_sold_time_sk is not null and cs_item_sk BETWEEN DynamicValue(RS_39_item_i_item_sk_min) AND DynamicValue(RS_39_item_i_item_sk_max) and in_bloom_filter(cs_item_sk, DynamicValue(RS_39_item_i_item_sk_bloom_filter)))
                                  TableScan [TS_145] (rows=43005109025 width=135)
                                    default@catalog_sales,catalog_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_time_sk","cs_item_sk","cs_ext_sales_price"]
                                  <-Reducer 11 [BROADCAST_EDGE] vectorized, llap
                                    BROADCAST [RS_216]
                                      Group By Operator [GBY_215] (rows=1 width=24)
                                        Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                <-Map 8 [CONTAINS] vectorized, llap
                  Reduce Output Operator [RS_239]
                    PartitionCols:_col0, _col1, _col2, _col3
                    Group By Operator [GBY_238] (rows=11813956 width=223)
                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col0)"],keys:_col4, _col5, _col7, _col8
                      Map Join Operator [MAPJOIN_237] (rows=11813956 width=112)
                        Conds:MAPJOIN_236._col2=RS_195._col0(Inner),Output:["_col0","_col4","_col5","_col7","_col8"]
                      <-Map 12 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_195]
                          PartitionCols:_col0
                           Please refer to the previous Select Operator [SEL_192]
                      <-Map Join Operator [MAPJOIN_236] (rows=23627911 width=104)
                          Conds:SEL_235._col1=RS_188._col0(Inner),Output:["_col0","_col2","_col4","_col5"]
                        <-Map 10 [BROADCAST_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_188]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_184]
                        <-Select Operator [SEL_235] (rows=1367785359 width=8)
                            Output:["_col0","_col1","_col2"]
                            Map Join Operator [MAPJOIN_234] (rows=1367785359 width=8)
                              Conds:SEL_233._col3=RS_228._col0(Inner),Output:["_col0","_col1","_col2"]
                            <-Map 9 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_228]
                                PartitionCols:_col0
                                Select Operator [SEL_227] (rows=31 width=8)
                                  Output:["_col0"]
                                  Filter Operator [FIL_226] (rows=31 width=16)
                                    predicate:((d_year = 2001) and (d_moy = 12))
                                    TableScan [TS_24] (rows=73049 width=16)
                                      default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                              Dynamic Partitioning Event Operator [EVENT_231] (rows=15 width=8)
                                Group By Operator [GBY_230] (rows=15 width=8)
                                  Output:["_col0"],keys:_col0
                                  Select Operator [SEL_229] (rows=31 width=8)
                                    Output:["_col0"]
                                     Please refer to the previous Select Operator [SEL_227]
                            <-Select Operator [SEL_233] (rows=80568078218 width=133)
                                Output:["_col0","_col1","_col2","_col3"]
                                Filter Operator [FIL_232] (rows=80568078218 width=133)
                                  predicate:(ss_sold_time_sk is not null and ss_item_sk BETWEEN DynamicValue(RS_39_item_i_item_sk_min) AND DynamicValue(RS_39_item_i_item_sk_max) and in_bloom_filter(ss_item_sk, DynamicValue(RS_39_item_i_item_sk_bloom_filter)))
                                  TableScan [TS_161] (rows=82510879939 width=133)
                                    default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_time_sk","ss_item_sk","ss_ext_sales_price"]
                                  <-Reducer 11 [BROADCAST_EDGE] vectorized, llap
                                    BROADCAST [RS_217]
                                       Please refer to the previous Group By Operator [GBY_215]

