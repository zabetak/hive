Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 7 (BROADCAST_EDGE)
Map 12 <- Map 7 (BROADCAST_EDGE)
Map 9 <- Map 7 (BROADCAST_EDGE)
Reducer 10 <- Map 8 (CUSTOM_SIMPLE_EDGE), Map 9 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 13 <- Map 12 (CUSTOM_SIMPLE_EDGE), Map 8 (CUSTOM_SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 8 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 6 vectorized, llap
      File Output Operator [FS_226]
        Group By Operator [GBY_225] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 5 [CUSTOM_SIMPLE_EDGE] vectorized, llap
          PARTITION_ONLY_SHUFFLE [RS_224]
            Group By Operator [GBY_223] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Select Operator [SEL_222] (rows=1 width=8)
                Filter Operator [FIL_221] (rows=1 width=8)
                  predicate:(_col3 = 3L)
                  Select Operator [SEL_220] (rows=444670820 width=8)
                    Output:["_col3"]
                    Group By Operator [GBY_219] (rows=444670820 width=244)
                      Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                    <-Union 4 [SIMPLE_EDGE]
                      <-Reducer 11 [CONTAINS] vectorized, llap
                        Reduce Output Operator [RS_238]
                          PartitionCols:_col0, _col1, _col2
                          Group By Operator [GBY_237] (rows=889341640 width=244)
                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                            Group By Operator [GBY_236] (rows=523405109 width=244)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                              Select Operator [SEL_235] (rows=2093620436 width=236)
                                Output:["_col0","_col1","_col2"]
                                Group By Operator [GBY_234] (rows=2093620436 width=236)
                                  Output:["_col0","_col1","_col2"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 10 [SIMPLE_EDGE] vectorized, llap
                                  SHUFFLE [RS_233]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_232] (rows=4187240873 width=236)
                                      Output:["_col0","_col1","_col2"],keys:_col6, _col5, _col3
                                      Map Join Operator [MAPJOIN_231] (rows=8374481746 width=236)
                                        Conds:RS_230.KEY.reducesinkkey0=RS_209.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col3","_col5","_col6"]
                                      <-Map 8 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_209]
                                          PartitionCols:_col0
                                          Select Operator [SEL_207] (rows=80000000 width=188)
                                            Output:["_col0","_col1","_col2"]
                                            TableScan [TS_6] (rows=80000000 width=188)
                                              default@customer,customer, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_first_name","c_last_name"]
                                      <-Map 9 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_230]
                                          PartitionCols:_col0
                                          Map Join Operator [MAPJOIN_229] (rows=8374481746 width=63)
                                            Conds:SEL_228._col1=RS_193._col0(Inner),Output:["_col0","_col3"]
                                          <-Map 7 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_193]
                                              PartitionCols:_col0
                                              Select Operator [SEL_190] (rows=359 width=64)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_189] (rows=359 width=68)
                                                  predicate:d_month_seq BETWEEN 1212 AND 1223
                                                  TableScan [TS_3] (rows=73049 width=68)
                                                    default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date","d_month_seq"]
                                          <-Select Operator [SEL_228] (rows=42899393143 width=15)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_227] (rows=42899393143 width=15)
                                                predicate:cs_bill_customer_sk is not null
                                                TableScan [TS_24] (rows=43005109025 width=15)
                                                  default@catalog_sales,catalog_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_bill_customer_sk"]
                      <-Reducer 14 [CONTAINS] vectorized, llap
                        Reduce Output Operator [RS_250]
                          PartitionCols:_col0, _col1, _col2
                          Group By Operator [GBY_249] (rows=889341640 width=244)
                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                            Group By Operator [GBY_248] (rows=265313593 width=244)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                              Select Operator [SEL_247] (rows=1061254375 width=236)
                                Output:["_col0","_col1","_col2"]
                                Group By Operator [GBY_246] (rows=1061254375 width=236)
                                  Output:["_col0","_col1","_col2"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 13 [SIMPLE_EDGE] vectorized, llap
                                  SHUFFLE [RS_245]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_244] (rows=2122508751 width=236)
                                      Output:["_col0","_col1","_col2"],keys:_col6, _col5, _col3
                                      Map Join Operator [MAPJOIN_243] (rows=4245017503 width=236)
                                        Conds:RS_242.KEY.reducesinkkey0=RS_210.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col3","_col5","_col6"]
                                      <-Map 8 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_210]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_207]
                                      <-Map 12 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_242]
                                          PartitionCols:_col0
                                          Map Join Operator [MAPJOIN_241] (rows=4245017503 width=63)
                                            Conds:SEL_240._col1=RS_195._col0(Inner),Output:["_col0","_col3"]
                                          <-Map 7 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_195]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_190]
                                          <-Select Operator [SEL_240] (rows=21591944812 width=15)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_239] (rows=21591944812 width=15)
                                                predicate:ws_bill_customer_sk is not null
                                                TableScan [TS_49] (rows=21594638446 width=15)
                                                  default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_bill_customer_sk"]
                      <-Reducer 3 [CONTAINS] vectorized, llap
                        Reduce Output Operator [RS_218]
                          PartitionCols:_col0, _col1, _col2
                          Group By Operator [GBY_217] (rows=889341640 width=244)
                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                            Group By Operator [GBY_216] (rows=989964579 width=244)
                              Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                              Select Operator [SEL_215] (rows=3959858318 width=236)
                                Output:["_col0","_col1","_col2"]
                                Group By Operator [GBY_214] (rows=3959858318 width=236)
                                  Output:["_col0","_col1","_col2"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                                  SHUFFLE [RS_213]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_212] (rows=7919716636 width=236)
                                      Output:["_col0","_col1","_col2"],keys:_col6, _col5, _col3
                                      Map Join Operator [MAPJOIN_211] (rows=15839433273 width=236)
                                        Conds:RS_206.KEY.reducesinkkey0=RS_208.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col3","_col5","_col6"]
                                      <-Map 8 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_208]
                                          PartitionCols:_col0
                                           Please refer to the previous Select Operator [SEL_207]
                                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_206]
                                          PartitionCols:_col0
                                          Map Join Operator [MAPJOIN_205] (rows=15839433273 width=63)
                                            Conds:SEL_204._col1=RS_191._col0(Inner),Output:["_col0","_col3"]
                                          <-Map 7 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_191]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_190]
                                          <-Select Operator [SEL_204] (rows=80566020964 width=15)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_203] (rows=80566020964 width=15)
                                                predicate:ss_customer_sk is not null
                                                TableScan [TS_0] (rows=82510879939 width=15)
                                                  default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk"]

