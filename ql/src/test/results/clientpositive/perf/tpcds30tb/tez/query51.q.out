Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 6 (BROADCAST_EDGE)
Map 7 <- Map 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 8 <- Map 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_105]
        Limit [LIM_104] (rows=100 width=512)
          Number of rows:100
          Select Operator [SEL_103] (rows=15700950861836 width=512)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 4 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_102]
              Select Operator [SEL_101] (rows=15700950861836 width=512)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Top N Key Operator [TNK_100] (rows=15700950861836 width=352)
                  keys:CASE WHEN (_col3 is not null) THEN (_col3) ELSE (_col0) END, CASE WHEN (_col4 is not null) THEN (_col4) ELSE (_col1) END,top n:100
                  Filter Operator [FIL_99] (rows=15700950861836 width=352)
                    predicate:(max_window_0 > max_window_1)
                    PTF Operator [PTF_98] (rows=47102852585509 width=352)
                      Function definitions:[{},{"name:":"windowingtablefunction","order by:":"CASE WHEN (_col4 is not null) THEN (_col4) ELSE (_col1) END ASC NULLS LAST","partition by:":"CASE WHEN (_col3 is not null) THEN (_col3) ELSE (_col0) END"}]
                      Select Operator [SEL_97] (rows=47102852585509 width=352)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                      <-Reducer 3 [SIMPLE_EDGE] llap
                        SHUFFLE [RS_41]
                          PartitionCols:CASE WHEN (_col3 is not null) THEN (_col3) ELSE (_col0) END
                          Merge Join Operator [MERGEJOIN_72] (rows=47102852585509 width=352)
                            Conds:RS_38._col0, _col1=RS_39._col0, _col1(Outer),Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          <-Reducer 2 [SIMPLE_EDGE] llap
                            SHUFFLE [RS_38]
                              PartitionCols:_col0, _col1
                              Select Operator [SEL_17] (rows=4055449063 width=176)
                                Output:["_col0","_col1","_col2"]
                                PTF Operator [PTF_16] (rows=4055449063 width=176)
                                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col1 ASC NULLS LAST","partition by:":"_col0"}]
                                  Select Operator [SEL_68]
                                    Output:["_col0","_col1","_col2"]
                                    Group By Operator [GBY_12] (rows=4055449063 width=176)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                    <-Map 1 [SIMPLE_EDGE] vectorized, llap
                                      SHUFFLE [RS_88]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_87] (rows=8110898127 width=176)
                                          Output:["_col0","_col1","_col2"],aggregations:["sum(_col1)"],keys:_col0, _col4
                                          Map Join Operator [MAPJOIN_86] (rows=16221796254 width=162)
                                            Conds:SEL_85._col2=RS_77._col0(Inner),Output:["_col0","_col1","_col4"]
                                          <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_77]
                                              PartitionCols:_col0
                                              Select Operator [SEL_76] (rows=359 width=64)
                                                Output:["_col0","_col1"]
                                                Filter Operator [FIL_75] (rows=359 width=68)
                                                  predicate:d_month_seq BETWEEN 1212 AND 1223
                                                  TableScan [TS_3] (rows=73049 width=68)
                                                    default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date","d_month_seq"]
                                          <-Select Operator [SEL_85] (rows=82510879939 width=125)
                                              Output:["_col0","_col1","_col2"]
                                              TableScan [TS_0] (rows=82510879939 width=125)
                                                default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_item_sk","ss_sales_price"]
                          <-Reducer 8 [SIMPLE_EDGE] llap
                            SHUFFLE [RS_39]
                              PartitionCols:_col0, _col1
                              Select Operator [SEL_36] (rows=1061386769 width=176)
                                Output:["_col0","_col1","_col2"]
                                PTF Operator [PTF_35] (rows=1061386769 width=176)
                                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col1 ASC NULLS LAST","partition by:":"_col0"}]
                                  Select Operator [SEL_69]
                                    Output:["_col0","_col1","_col2"]
                                    Group By Operator [GBY_31] (rows=1061386769 width=176)
                                      Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                                    <-Map 7 [SIMPLE_EDGE] vectorized, llap
                                      SHUFFLE [RS_94]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_93] (rows=2122773538 width=176)
                                          Output:["_col0","_col1","_col2"],aggregations:["sum(_col1)"],keys:_col0, _col4
                                          Map Join Operator [MAPJOIN_92] (rows=4245547076 width=175)
                                            Conds:SEL_91._col2=RS_79._col0(Inner),Output:["_col0","_col1","_col4"]
                                          <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_79]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_76]
                                          <-Select Operator [SEL_91] (rows=21594638446 width=127)
                                              Output:["_col0","_col1","_col2"]
                                              TableScan [TS_19] (rows=21594638446 width=127)
                                                default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_item_sk","ws_sales_price"]

