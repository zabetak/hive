Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE)
Map 11 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE)
Map 13 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE)
Map 5 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE)
Map 7 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE)
Map 9 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (SIMPLE_EDGE), Reducer 12 (BROADCAST_EDGE), Reducer 14 (BROADCAST_EDGE), Reducer 2 (BROADCAST_EDGE)
Reducer 12 <- Map 11 (SIMPLE_EDGE)
Reducer 14 <- Map 13 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 6 (BROADCAST_EDGE), Reducer 8 (BROADCAST_EDGE)
Reducer 6 <- Map 5 (SIMPLE_EDGE)
Reducer 8 <- Map 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 10 vectorized, llap
      File Output Operator [FS_514]
        Select Operator [SEL_513] (rows=482 width=550)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          Filter Operator [FIL_512] (rows=482 width=778)
            predicate:(CASE WHEN ((_col9 > 0)) THEN (CASE WHEN (_col7) THEN (((_col4 / _col6) > (_col13 / _col9))) ELSE (false) END) ELSE (false) END and CASE WHEN ((_col11 > 0)) THEN (CASE WHEN (_col2) THEN (((_col6 / _col1) > (_col9 / _col11))) ELSE (false) END) ELSE (false) END)
            Map Join Operator [MAPJOIN_511] (rows=1930 width=778)
              Conds:RS_491._col0=MAPJOIN_510._col0(Inner),Output:["_col1","_col2","_col4","_col6","_col7","_col8","_col9","_col11","_col13"]
            <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
              BROADCAST [RS_491]
                PartitionCols:_col0
                Map Join Operator [MAPJOIN_490] (rows=1930 width=442)
                  Conds:MAPJOIN_489._col0=RS_486._col0(Inner),Output:["_col0","_col1","_col2","_col4","_col6","_col7"]
                <-Reducer 8 [BROADCAST_EDGE] vectorized, llap
                  BROADCAST [RS_486]
                    PartitionCols:_col0
                    Select Operator [SEL_485] (rows=1930 width=214)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_484] (rows=1930 width=210)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Map 7 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_483]
                          PartitionCols:_col0
                          Group By Operator [GBY_482] (rows=1721560 width=210)
                            Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                            Map Join Operator [MAPJOIN_481] (rows=1087859189 width=209)
                              Conds:MAPJOIN_480._col0=RS_454._col0(Inner),Output:["_col1","_col5"]
                            <-Map 4 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_454]
                                PartitionCols:_col0
                                Select Operator [SEL_451] (rows=40000000 width=106)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_450] (rows=40000000 width=106)
                                    predicate:ca_county is not null
                                    TableScan [TS_6] (rows=40000000 width=106)
                                      default@customer_address,customer_address, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_county"]
                            <-Map Join Operator [MAPJOIN_480] (rows=1087859189 width=119)
                                Conds:SEL_479._col2=RS_438._col0(Inner),Output:["_col0","_col1"]
                              <-Map 3 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_438]
                                  PartitionCols:_col0
                                  Select Operator [SEL_431] (rows=92 width=8)
                                    Output:["_col0"]
                                    Filter Operator [FIL_428] (rows=92 width=16)
                                      predicate:((d_year = 2000) and (d_qoy = 2))
                                      TableScan [TS_3] (rows=73049 width=16)
                                        default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                              <-Select Operator [SEL_479] (rows=21591937227 width=127)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_478] (rows=21591937227 width=127)
                                    predicate:ws_bill_addr_sk is not null
                                    TableScan [TS_40] (rows=21594638446 width=127)
                                      default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_bill_addr_sk","ws_ext_sales_price"]
                <-Map Join Operator [MAPJOIN_489] (rows=1930 width=326)
                    Conds:SEL_488._col0=RS_477._col0(Inner),Output:["_col0","_col1","_col2","_col4"]
                  <-Reducer 6 [BROADCAST_EDGE] vectorized, llap
                    BROADCAST [RS_477]
                      PartitionCols:_col0
                      Group By Operator [GBY_476] (rows=1930 width=210)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Map 5 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_475]
                          PartitionCols:_col0
                          Group By Operator [GBY_474] (rows=1721560 width=210)
                            Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                            Map Join Operator [MAPJOIN_473] (rows=1087859189 width=209)
                              Conds:MAPJOIN_472._col0=RS_453._col0(Inner),Output:["_col1","_col5"]
                            <-Map 4 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_453]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_451]
                            <-Map Join Operator [MAPJOIN_472] (rows=1087859189 width=119)
                                Conds:SEL_471._col2=RS_435._col0(Inner),Output:["_col0","_col1"]
                              <-Map 3 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_435]
                                  PartitionCols:_col0
                                  Select Operator [SEL_430] (rows=92 width=8)
                                    Output:["_col0"]
                                    Filter Operator [FIL_427] (rows=92 width=16)
                                      predicate:((d_year = 2000) and (d_qoy = 3))
                                       Please refer to the previous TableScan [TS_3]
                              <-Select Operator [SEL_471] (rows=21591937227 width=127)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_470] (rows=21591937227 width=127)
                                    predicate:ws_bill_addr_sk is not null
                                    TableScan [TS_20] (rows=21594638446 width=127)
                                      default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_bill_addr_sk","ws_ext_sales_price"]
                  <-Select Operator [SEL_488] (rows=1930 width=214)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_487] (rows=1930 width=210)
                        Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                      <-Map 1 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_469]
                          PartitionCols:_col0
                          Group By Operator [GBY_468] (rows=1721560 width=210)
                            Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                            Map Join Operator [MAPJOIN_467] (rows=1087859189 width=209)
                              Conds:MAPJOIN_466._col0=RS_452._col0(Inner),Output:["_col1","_col5"]
                            <-Map 4 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_452]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_451]
                            <-Map Join Operator [MAPJOIN_466] (rows=1087859189 width=119)
                                Conds:SEL_465._col2=RS_432._col0(Inner),Output:["_col0","_col1"]
                              <-Map 3 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_432]
                                  PartitionCols:_col0
                                  Select Operator [SEL_429] (rows=92 width=8)
                                    Output:["_col0"]
                                    Filter Operator [FIL_426] (rows=92 width=16)
                                      predicate:((d_year = 2000) and (d_qoy = 1))
                                       Please refer to the previous TableScan [TS_3]
                              <-Select Operator [SEL_465] (rows=21591937227 width=127)
                                  Output:["_col0","_col1","_col2"]
                                  Filter Operator [FIL_464] (rows=21591937227 width=127)
                                    predicate:ws_bill_addr_sk is not null
                                    TableScan [TS_0] (rows=21594638446 width=127)
                                      default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_bill_addr_sk","ws_ext_sales_price"]
            <-Map Join Operator [MAPJOIN_510] (rows=1930 width=434)
                Conds:MAPJOIN_509._col0=RS_507._col0(Inner),Output:["_col0","_col1","_col3","_col5"]
              <-Reducer 14 [BROADCAST_EDGE] vectorized, llap
                BROADCAST [RS_507]
                  PartitionCols:_col0
                  Group By Operator [GBY_506] (rows=1930 width=210)
                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                  <-Map 13 [SIMPLE_EDGE] vectorized, llap
                    SHUFFLE [RS_505]
                      PartitionCols:_col0
                      Group By Operator [GBY_504] (rows=4823070 width=210)
                        Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                        Map Join Operator [MAPJOIN_503] (rows=4059030477 width=157)
                          Conds:MAPJOIN_502._col0=RS_457._col0(Inner),Output:["_col1","_col5"]
                        <-Map 4 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_457]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_451]
                        <-Map Join Operator [MAPJOIN_502] (rows=4059030477 width=63)
                            Conds:SEL_501._col2=RS_437._col0(Inner),Output:["_col0","_col1"]
                          <-Map 3 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_437]
                              PartitionCols:_col0
                               Please refer to the previous Select Operator [SEL_430]
                          <-Select Operator [SEL_501] (rows=80564040039 width=125)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_500] (rows=80564040039 width=125)
                                predicate:ss_addr_sk is not null
                                TableScan [TS_100] (rows=82510879939 width=125)
                                  default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_addr_sk","ss_ext_sales_price"]
              <-Map Join Operator [MAPJOIN_509] (rows=1930 width=322)
                  Conds:GBY_508._col0=RS_499._col0(Inner),Output:["_col0","_col1","_col3"]
                <-Reducer 12 [BROADCAST_EDGE] vectorized, llap
                  BROADCAST [RS_499]
                    PartitionCols:_col0
                    Group By Operator [GBY_498] (rows=1930 width=210)
                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                    <-Map 11 [SIMPLE_EDGE] vectorized, llap
                      SHUFFLE [RS_497]
                        PartitionCols:_col0
                        Group By Operator [GBY_496] (rows=4823070 width=210)
                          Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                          Map Join Operator [MAPJOIN_495] (rows=4059030477 width=157)
                            Conds:MAPJOIN_494._col0=RS_456._col0(Inner),Output:["_col1","_col5"]
                          <-Map 4 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_456]
                              PartitionCols:_col0
                               Please refer to the previous Select Operator [SEL_451]
                          <-Map Join Operator [MAPJOIN_494] (rows=4059030477 width=63)
                              Conds:SEL_493._col2=RS_434._col0(Inner),Output:["_col0","_col1"]
                            <-Map 3 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_434]
                                PartitionCols:_col0
                                 Please refer to the previous Select Operator [SEL_429]
                            <-Select Operator [SEL_493] (rows=80564040039 width=125)
                                Output:["_col0","_col1","_col2"]
                                Filter Operator [FIL_492] (rows=80564040039 width=125)
                                  predicate:ss_addr_sk is not null
                                  TableScan [TS_80] (rows=82510879939 width=125)
                                    default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_addr_sk","ss_ext_sales_price"]
                <-Group By Operator [GBY_508] (rows=1930 width=210)
                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                  <-Map 9 [SIMPLE_EDGE] vectorized, llap
                    SHUFFLE [RS_463]
                      PartitionCols:_col0
                      Group By Operator [GBY_462] (rows=4823070 width=210)
                        Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                        Map Join Operator [MAPJOIN_461] (rows=4059030477 width=157)
                          Conds:MAPJOIN_460._col0=RS_455._col0(Inner),Output:["_col1","_col5"]
                        <-Map 4 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_455]
                            PartitionCols:_col0
                             Please refer to the previous Select Operator [SEL_451]
                        <-Map Join Operator [MAPJOIN_460] (rows=4059030477 width=63)
                            Conds:SEL_459._col2=RS_440._col0(Inner),Output:["_col0","_col1"]
                          <-Map 3 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_440]
                              PartitionCols:_col0
                               Please refer to the previous Select Operator [SEL_431]
                          <-Select Operator [SEL_459] (rows=80564040039 width=125)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_458] (rows=80564040039 width=125)
                                predicate:ss_addr_sk is not null
                                TableScan [TS_60] (rows=82510879939 width=125)
                                  default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_addr_sk","ss_ext_sales_price"]

