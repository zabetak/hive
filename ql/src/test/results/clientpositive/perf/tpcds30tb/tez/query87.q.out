Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 9 (BROADCAST_EDGE)
Map 11 <- Map 9 (BROADCAST_EDGE)
Map 14 <- Map 9 (BROADCAST_EDGE)
Reducer 12 <- Map 10 (CUSTOM_SIMPLE_EDGE), Map 11 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 15 <- Map 10 (CUSTOM_SIMPLE_EDGE), Map 14 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 10 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE), Union 4 (CONTAINS)
Reducer 5 <- Union 4 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 7 <- Union 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 8 vectorized, llap
      File Output Operator [FS_267]
        Group By Operator [GBY_266] (rows=1 width=8)
          Output:["_col0"],aggregations:["count(VALUE._col0)"]
        <-Reducer 7 [CUSTOM_SIMPLE_EDGE] vectorized, llap
          PARTITION_ONLY_SHUFFLE [RS_265]
            Group By Operator [GBY_264] (rows=1 width=8)
              Output:["_col0"],aggregations:["count()"]
              Select Operator [SEL_263] (rows=11711577 width=16)
                Filter Operator [FIL_262] (rows=11711577 width=16)
                  predicate:((_col3 > 0L) and ((_col3 * 2L) = _col4))
                  Select Operator [SEL_261] (rows=70269465 width=16)
                    Output:["_col3","_col4"]
                    Group By Operator [GBY_260] (rows=70269465 width=252)
                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                    <-Union 6 [SIMPLE_EDGE]
                      <-Reducer 16 [CONTAINS] vectorized, llap
                        Reduce Output Operator [RS_295]
                          PartitionCols:_col0, _col1, _col2
                          Group By Operator [GBY_294] (rows=140538930 width=252)
                            Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","sum(_col4)"],keys:_col0, _col1, _col2
                            Select Operator [SEL_293] (rows=281077860 width=252)
                              Output:["_col0","_col1","_col2","_col3","_col4"]
                              Select Operator [SEL_292] (rows=265313593 width=252)
                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                Group By Operator [GBY_291] (rows=265313593 width=244)
                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                                  Select Operator [SEL_290] (rows=1061254375 width=236)
                                    Output:["_col0","_col1","_col2"]
                                    Group By Operator [GBY_289] (rows=1061254375 width=236)
                                      Output:["_col0","_col1","_col2"],keys:KEY._col0, KEY._col1, KEY._col2
                                    <-Reducer 15 [SIMPLE_EDGE] vectorized, llap
                                      SHUFFLE [RS_288]
                                        PartitionCols:_col0, _col1, _col2
                                        Group By Operator [GBY_287] (rows=2122508751 width=236)
                                          Output:["_col0","_col1","_col2"],keys:_col6, _col5, _col3
                                          Map Join Operator [MAPJOIN_286] (rows=4245017503 width=236)
                                            Conds:RS_285.KEY.reducesinkkey0=RS_241.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col3","_col5","_col6"]
                                          <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                            PARTITION_ONLY_SHUFFLE [RS_241]
                                              PartitionCols:_col0
                                              Select Operator [SEL_238] (rows=80000000 width=188)
                                                Output:["_col0","_col1","_col2"]
                                                TableScan [TS_6] (rows=80000000 width=188)
                                                  default@customer,customer, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_first_name","c_last_name"]
                                          <-Map 14 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                            PARTITION_ONLY_SHUFFLE [RS_285]
                                              PartitionCols:_col0
                                              Map Join Operator [MAPJOIN_284] (rows=4245017503 width=63)
                                                Conds:SEL_283._col1=RS_226._col0(Inner),Output:["_col0","_col3"]
                                              <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                                BROADCAST [RS_226]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_221] (rows=359 width=64)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_220] (rows=359 width=68)
                                                      predicate:d_month_seq BETWEEN 1212 AND 1223
                                                      TableScan [TS_3] (rows=73049 width=68)
                                                        default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date","d_month_seq"]
                                              <-Select Operator [SEL_283] (rows=21591944812 width=15)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_282] (rows=21591944812 width=15)
                                                    predicate:ws_bill_customer_sk is not null
                                                    TableScan [TS_61] (rows=21594638446 width=15)
                                                      default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_bill_customer_sk"]
                      <-Reducer 5 [CONTAINS] vectorized, llap
                        Reduce Output Operator [RS_259]
                          PartitionCols:_col0, _col1, _col2
                          Group By Operator [GBY_258] (rows=140538930 width=252)
                            Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","sum(_col4)"],keys:_col0, _col1, _col2
                            Select Operator [SEL_257] (rows=281077860 width=252)
                              Output:["_col0","_col1","_col2","_col3","_col4"]
                              Select Operator [SEL_256] (rows=15764267 width=252)
                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                Group By Operator [GBY_255] (rows=15764267 width=244)
                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col0, _col1, _col2
                                  Select Operator [SEL_254] (rows=63057070 width=252)
                                    Output:["_col0","_col1","_col2"]
                                    Filter Operator [FIL_253] (rows=63057070 width=252)
                                      predicate:((_col3 > 0L) and ((_col3 * 2L) = _col4))
                                      Group By Operator [GBY_252] (rows=378342422 width=252)
                                        Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                      <-Union 4 [SIMPLE_EDGE]
                                        <-Reducer 13 [CONTAINS] vectorized, llap
                                          Reduce Output Operator [RS_281]
                                            PartitionCols:_col0, _col1, _col2
                                            Group By Operator [GBY_280] (rows=756684844 width=252)
                                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","sum(_col4)"],keys:_col0, _col1, _col2
                                              Select Operator [SEL_279] (rows=1513369688 width=252)
                                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                                Select Operator [SEL_278] (rows=523405109 width=252)
                                                  Output:["_col0","_col1","_col2","_col3","_col4"]
                                                  Group By Operator [GBY_277] (rows=523405109 width=244)
                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                                                    Select Operator [SEL_276] (rows=2093620436 width=236)
                                                      Output:["_col0","_col1","_col2"]
                                                      Group By Operator [GBY_275] (rows=2093620436 width=236)
                                                        Output:["_col0","_col1","_col2"],keys:KEY._col0, KEY._col1, KEY._col2
                                                      <-Reducer 12 [SIMPLE_EDGE] vectorized, llap
                                                        SHUFFLE [RS_274]
                                                          PartitionCols:_col0, _col1, _col2
                                                          Group By Operator [GBY_273] (rows=4187240873 width=236)
                                                            Output:["_col0","_col1","_col2"],keys:_col6, _col5, _col3
                                                            Map Join Operator [MAPJOIN_272] (rows=8374481746 width=236)
                                                              Conds:RS_271.KEY.reducesinkkey0=RS_240.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col3","_col5","_col6"]
                                                            <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                              PARTITION_ONLY_SHUFFLE [RS_240]
                                                                PartitionCols:_col0
                                                                 Please refer to the previous Select Operator [SEL_238]
                                                            <-Map 11 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                              PARTITION_ONLY_SHUFFLE [RS_271]
                                                                PartitionCols:_col0
                                                                Map Join Operator [MAPJOIN_270] (rows=8374481746 width=63)
                                                                  Conds:SEL_269._col1=RS_224._col0(Inner),Output:["_col0","_col3"]
                                                                <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                                                  BROADCAST [RS_224]
                                                                    PartitionCols:_col0
                                                                     Please refer to the previous Select Operator [SEL_221]
                                                                <-Select Operator [SEL_269] (rows=42899393143 width=15)
                                                                    Output:["_col0","_col1"]
                                                                    Filter Operator [FIL_268] (rows=42899393143 width=15)
                                                                      predicate:cs_bill_customer_sk is not null
                                                                      TableScan [TS_24] (rows=43005109025 width=15)
                                                                        default@catalog_sales,catalog_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_bill_customer_sk"]
                                        <-Reducer 3 [CONTAINS] vectorized, llap
                                          Reduce Output Operator [RS_251]
                                            PartitionCols:_col0, _col1, _col2
                                            Group By Operator [GBY_250] (rows=756684844 width=252)
                                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","sum(_col4)"],keys:_col0, _col1, _col2
                                              Select Operator [SEL_249] (rows=1513369688 width=252)
                                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                                Select Operator [SEL_248] (rows=989964579 width=252)
                                                  Output:["_col0","_col1","_col2","_col3","_col4"]
                                                  Group By Operator [GBY_247] (rows=989964579 width=244)
                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count()"],keys:_col1, _col0, _col2
                                                    Select Operator [SEL_246] (rows=3959858318 width=236)
                                                      Output:["_col0","_col1","_col2"]
                                                      Group By Operator [GBY_245] (rows=3959858318 width=236)
                                                        Output:["_col0","_col1","_col2"],keys:KEY._col0, KEY._col1, KEY._col2
                                                      <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                                                        SHUFFLE [RS_244]
                                                          PartitionCols:_col0, _col1, _col2
                                                          Group By Operator [GBY_243] (rows=7919716636 width=236)
                                                            Output:["_col0","_col1","_col2"],keys:_col6, _col5, _col3
                                                            Map Join Operator [MAPJOIN_242] (rows=15839433273 width=236)
                                                              Conds:RS_237.KEY.reducesinkkey0=RS_239.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col3","_col5","_col6"]
                                                            <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                              PARTITION_ONLY_SHUFFLE [RS_239]
                                                                PartitionCols:_col0
                                                                 Please refer to the previous Select Operator [SEL_238]
                                                            <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                              PARTITION_ONLY_SHUFFLE [RS_237]
                                                                PartitionCols:_col0
                                                                Map Join Operator [MAPJOIN_236] (rows=15839433273 width=63)
                                                                  Conds:SEL_235._col1=RS_222._col0(Inner),Output:["_col0","_col3"]
                                                                <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                                                  BROADCAST [RS_222]
                                                                    PartitionCols:_col0
                                                                     Please refer to the previous Select Operator [SEL_221]
                                                                <-Select Operator [SEL_235] (rows=80566020964 width=15)
                                                                    Output:["_col0","_col1"]
                                                                    Filter Operator [FIL_234] (rows=80566020964 width=15)
                                                                      predicate:ss_customer_sk is not null
                                                                      TableScan [TS_0] (rows=82510879939 width=15)
                                                                        default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk"]

