Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE)
Map 13 <- Map 4 (BROADCAST_EDGE)
Map 16 <- Map 4 (BROADCAST_EDGE)
Map 6 <- Map 4 (BROADCAST_EDGE)
Reducer 10 <- Reducer 15 (CUSTOM_SIMPLE_EDGE), Reducer 9 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Reducer 10 (CUSTOM_SIMPLE_EDGE), Reducer 18 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (SIMPLE_EDGE)
Reducer 14 <- Map 13 (CUSTOM_SIMPLE_EDGE), Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 17 <- Map 16 (CUSTOM_SIMPLE_EDGE), Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 7 <- Map 5 (CUSTOM_SIMPLE_EDGE), Map 6 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 3 (CUSTOM_SIMPLE_EDGE), Reducer 8 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 12 vectorized, llap
      File Output Operator [FS_338]
        Limit [LIM_337] (rows=100 width=280)
          Number of rows:100
          Select Operator [SEL_336] (rows=40000000 width=280)
            Output:["_col0","_col1","_col2"]
          <-Reducer 11 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_335]
              Select Operator [SEL_334] (rows=40000000 width=280)
                Output:["_col0","_col1","_col2"]
                Top N Key Operator [TNK_333] (rows=40000000 width=732)
                  keys:_col2, _col0, _col1,top n:100
                  Filter Operator [FIL_332] (rows=40000000 width=732)
                    predicate:CASE WHEN (_col5 is not null) THEN (CASE WHEN (_col10) THEN (((_col7 / _col9) > (_col3 / _col5))) ELSE (false) END) ELSE (false) END
                    Map Join Operator [MAPJOIN_331] (rows=80000000 width=732)
                      Conds:RS_319.KEY.reducesinkkey0=RS_330.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2","_col3","_col5","_col7","_col9","_col10"]
                    <-Reducer 18 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                      PARTITION_ONLY_SHUFFLE [RS_330]
                        PartitionCols:_col0
                        Select Operator [SEL_329] (rows=80000000 width=216)
                          Output:["_col0","_col1","_col2"]
                          Filter Operator [FIL_328] (rows=80000000 width=212)
                            predicate:(_col1 > 0)
                            Group By Operator [GBY_327] (rows=80000000 width=212)
                              Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                            <-Reducer 17 [SIMPLE_EDGE] vectorized, llap
                              SHUFFLE [RS_326]
                                PartitionCols:_col0
                                Group By Operator [GBY_325] (rows=80000000 width=212)
                                  Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                                  Map Join Operator [MAPJOIN_324] (rows=4339613664 width=211)
                                    Conds:RS_323.KEY.reducesinkkey0=RS_291.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col1","_col5"]
                                  <-Map 5 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_291]
                                      PartitionCols:_col0
                                      Select Operator [SEL_287] (rows=80000000 width=108)
                                        Output:["_col0","_col1"]
                                        TableScan [TS_6] (rows=80000000 width=288)
                                          default@customer,customer, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_customer_id","c_first_name","c_last_name"]
                                  <-Map 16 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_323]
                                      PartitionCols:_col0
                                      Map Join Operator [MAPJOIN_322] (rows=4339613664 width=119)
                                        Conds:SEL_321._col2=RS_275._col0(Inner),Output:["_col0","_col1"]
                                      <-Map 4 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_275]
                                          PartitionCols:_col0
                                          Select Operator [SEL_269] (rows=367 width=8)
                                            Output:["_col0"]
                                            Filter Operator [FIL_267] (rows=367 width=12)
                                              predicate:(d_year = 1998)
                                              TableScan [TS_3] (rows=73049 width=12)
                                                default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                      <-Select Operator [SEL_321] (rows=21591944812 width=127)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_320] (rows=21591944812 width=127)
                                            predicate:ws_bill_customer_sk is not null
                                            TableScan [TS_58] (rows=21594638446 width=127)
                                              default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_bill_customer_sk","ws_net_paid"]
                    <-Reducer 10 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                      PARTITION_ONLY_SHUFFLE [RS_319]
                        PartitionCols:_col0
                        Map Join Operator [MAPJOIN_318] (rows=80000000 width=616)
                          Conds:RS_308.KEY.reducesinkkey0=RS_317.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2","_col3","_col5","_col7"]
                        <-Reducer 15 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_317]
                            PartitionCols:_col0
                            Group By Operator [GBY_316] (rows=80000000 width=212)
                              Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                            <-Reducer 14 [SIMPLE_EDGE] vectorized, llap
                              SHUFFLE [RS_315]
                                PartitionCols:_col0
                                Group By Operator [GBY_314] (rows=80000000 width=212)
                                  Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                                  Map Join Operator [MAPJOIN_313] (rows=4339613664 width=211)
                                    Conds:RS_312.KEY.reducesinkkey0=RS_290.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col1","_col5"]
                                  <-Map 5 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_290]
                                      PartitionCols:_col0
                                       Please refer to the previous Select Operator [SEL_287]
                                  <-Map 13 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_312]
                                      PartitionCols:_col0
                                      Map Join Operator [MAPJOIN_311] (rows=4339613664 width=119)
                                        Conds:SEL_310._col2=RS_272._col0(Inner),Output:["_col0","_col1"]
                                      <-Map 4 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_272]
                                          PartitionCols:_col0
                                          Select Operator [SEL_268] (rows=367 width=8)
                                            Output:["_col0"]
                                            Filter Operator [FIL_266] (rows=367 width=12)
                                              predicate:(d_year = 1999)
                                               Please refer to the previous TableScan [TS_3]
                                      <-Select Operator [SEL_310] (rows=21591944812 width=127)
                                          Output:["_col0","_col1","_col2"]
                                          Filter Operator [FIL_309] (rows=21591944812 width=127)
                                            predicate:ws_bill_customer_sk is not null
                                            TableScan [TS_39] (rows=21594638446 width=127)
                                              default@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_bill_customer_sk","ws_net_paid"]
                        <-Reducer 9 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_308]
                            PartitionCols:_col0
                            Map Join Operator [MAPJOIN_307] (rows=80000000 width=504)
                              Conds:RS_306.KEY.reducesinkkey0=RS_297.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2","_col3","_col5"]
                            <-Reducer 3 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                              PARTITION_ONLY_SHUFFLE [RS_306]
                                PartitionCols:_col0
                                Group By Operator [GBY_305] (rows=80000000 width=392)
                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                                  SHUFFLE [RS_304]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_303] (rows=80000000 width=392)
                                      Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(_col1)"],keys:_col5, _col6, _col7
                                      Map Join Operator [MAPJOIN_302] (rows=16192399916 width=378)
                                        Conds:RS_301.KEY.reducesinkkey0=RS_288.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col1","_col5","_col6","_col7"]
                                      <-Map 5 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_288]
                                          PartitionCols:_col0
                                          Select Operator [SEL_286] (rows=80000000 width=288)
                                            Output:["_col0","_col1","_col2","_col3"]
                                             Please refer to the previous TableScan [TS_6]
                                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_301]
                                          PartitionCols:_col0
                                          Map Join Operator [MAPJOIN_300] (rows=16192399916 width=105)
                                            Conds:SEL_299._col2=RS_270._col0(Inner),Output:["_col0","_col1"]
                                          <-Map 4 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_270]
                                              PartitionCols:_col0
                                               Please refer to the previous Select Operator [SEL_268]
                                          <-Select Operator [SEL_299] (rows=80566020964 width=125)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_298] (rows=80566020964 width=125)
                                                predicate:ss_customer_sk is not null
                                                TableScan [TS_0] (rows=82510879939 width=125)
                                                  default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk","ss_net_paid"]
                            <-Reducer 8 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                              PARTITION_ONLY_SHUFFLE [RS_297]
                                PartitionCols:_col0
                                Filter Operator [FIL_296] (rows=80000000 width=212)
                                  predicate:(_col1 > 0)
                                  Group By Operator [GBY_295] (rows=80000000 width=212)
                                    Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                  <-Reducer 7 [SIMPLE_EDGE] vectorized, llap
                                    SHUFFLE [RS_294]
                                      PartitionCols:_col0
                                      Group By Operator [GBY_293] (rows=80000000 width=212)
                                        Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                                        Map Join Operator [MAPJOIN_292] (rows=16192399916 width=198)
                                          Conds:RS_285.KEY.reducesinkkey0=RS_289.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col1","_col5"]
                                        <-Map 5 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                          PARTITION_ONLY_SHUFFLE [RS_289]
                                            PartitionCols:_col0
                                             Please refer to the previous Select Operator [SEL_287]
                                        <-Map 6 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                          PARTITION_ONLY_SHUFFLE [RS_285]
                                            PartitionCols:_col0
                                            Map Join Operator [MAPJOIN_284] (rows=16192399916 width=105)
                                              Conds:SEL_283._col2=RS_273._col0(Inner),Output:["_col0","_col1"]
                                            <-Map 4 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_273]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_269]
                                            <-Select Operator [SEL_283] (rows=80566020964 width=125)
                                                Output:["_col0","_col1","_col2"]
                                                Filter Operator [FIL_282] (rows=80566020964 width=125)
                                                  predicate:ss_customer_sk is not null
                                                  TableScan [TS_19] (rows=82510879939 width=125)
                                                    default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk","ss_net_paid"]

