Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE)
Map 5 <- Map 1 (BROADCAST_EDGE), Reducer 3 (BROADCAST_EDGE)
Reducer 3 <- Map 2 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized, llap
      File Output Operator [FS_113]
        Limit [LIM_112] (rows=100 width=396)
          Number of rows:100
          Select Operator [SEL_111] (rows=797 width=396)
            Output:["_col0","_col1","_col2"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_110]
              Group By Operator [GBY_109] (rows=797 width=396)
                Output:["_col0","_col1","_col2"],keys:KEY._col0, KEY._col1, KEY._col2
              <-Map 5 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_108]
                  PartitionCols:_col0, _col1, _col2
                  Group By Operator [GBY_107] (rows=184107 width=396)
                    Output:["_col0","_col1","_col2"],keys:_col3, _col4, _col5
                    Top N Key Operator [TNK_106] (rows=149057791 width=395)
                      keys:_col3, _col4, _col5,top n:100
                      Map Join Operator [MAPJOIN_105] (rows=149057791 width=395)
                        Conds:RS_100._col2=SEL_104._col0(Inner),Output:["_col3","_col4","_col5"]
                      <-Map 1 [BROADCAST_EDGE] vectorized, llap
                        BROADCAST [RS_100]
                          PartitionCols:_col2
                          Map Join Operator [MAPJOIN_99] (rows=140402 width=403)
                            Conds:MAPJOIN_98._col0=RS_95._col0(Inner),Output:["_col2","_col3","_col4","_col5"]
                          <-Map 4 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_95]
                              PartitionCols:_col0
                              Select Operator [SEL_94] (rows=8116 width=8)
                                Output:["_col0"]
                                Filter Operator [FIL_93] (rows=8116 width=64)
                                  predicate:CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'2002-05-30 00:00:00' AND TIMESTAMP'2002-07-29 00:00:00'
                                  TableScan [TS_6] (rows=73049 width=64)
                                    default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                          <-Map Join Operator [MAPJOIN_98] (rows=1263704 width=411)
                              Conds:SEL_97._col1=RS_89._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col5"]
                            <-Map 2 [BROADCAST_EDGE] vectorized, llap
                              PARTITION_ONLY_SHUFFLE [RS_89]
                                PartitionCols:_col0
                                Select Operator [SEL_88] (rows=797 width=403)
                                  Output:["_col0","_col1","_col2","_col3"]
                                  Filter Operator [FIL_87] (rows=797 width=407)
                                    predicate:((i_manufact_id) IN (437, 129, 727, 663) and i_current_price BETWEEN 30 AND 60)
                                    TableScan [TS_3] (rows=462000 width=407)
                                      default@item,item, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_item_id","i_item_desc","i_current_price","i_manufact_id"]
                            <-Select Operator [SEL_97] (rows=732535650 width=16)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_96] (rows=732535650 width=19)
                                  predicate:inv_quantity_on_hand BETWEEN 100 AND 500
                                  TableScan [TS_0] (rows=1627857000 width=19)
                                    default@inventory,inventory, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["inv_date_sk","inv_item_sk","inv_quantity_on_hand"]
                      <-Select Operator [SEL_104] (rows=86404891377 width=8)
                          Output:["_col0"]
                          Filter Operator [FIL_103] (rows=86404891377 width=8)
                            predicate:(ss_item_sk BETWEEN DynamicValue(RS_12_item_i_item_sk_min) AND DynamicValue(RS_12_item_i_item_sk_max) and in_bloom_filter(ss_item_sk, DynamicValue(RS_12_item_i_item_sk_bloom_filter)))
                            TableScan [TS_9] (rows=86404891377 width=8)
                              default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_item_sk"]
                            <-Reducer 3 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_102]
                                Group By Operator [GBY_101] (rows=1 width=24)
                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]

