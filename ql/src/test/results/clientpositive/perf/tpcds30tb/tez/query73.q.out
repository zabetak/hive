Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Reducer 4 (BROADCAST_EDGE)
Map 3 <- Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 4 <- Map 3 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized, llap
      File Output Operator [FS_125]
        Select Operator [SEL_124] (rows=5 width=368)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
        <-Map 1 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_123]
            Select Operator [SEL_122] (rows=5 width=368)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
              Map Join Operator [MAPJOIN_121] (rows=5 width=368)
                Conds:SEL_120._col0=RS_119._col1(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
              <-Reducer 4 [BROADCAST_EDGE] vectorized, llap
                BROADCAST [RS_119]
                  PartitionCols:_col1
                  Filter Operator [FIL_118] (rows=5 width=17)
                    predicate:_col2 BETWEEN 1L AND 5L
                    Select Operator [SEL_117] (rows=12400839 width=16)
                      Output:["_col0","_col1","_col2"]
                      Group By Operator [GBY_116] (rows=12400839 width=16)
                        Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1
                      <-Map 3 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_115]
                          PartitionCols:_col0, _col1
                          Group By Operator [GBY_114] (rows=12400839 width=16)
                            Output:["_col0","_col1","_col2"],aggregations:["count()"],keys:_col0, _col3
                            Map Join Operator [MAPJOIN_113] (rows=12400839 width=8)
                              Conds:MAPJOIN_112._col2=RS_108._col0(Inner),Output:["_col0","_col3"]
                            <-Map 7 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_108]
                                PartitionCols:_col0
                                Select Operator [SEL_107] (rows=53 width=8)
                                  Output:["_col0"]
                                  Filter Operator [FIL_106] (rows=53 width=106)
                                    predicate:(s_county) IN ('Mobile County', 'Maverick County', 'Huron County', 'Kittitas County')
                                    TableScan [TS_11] (rows=1704 width=106)
                                      default@store,store, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_county"]
                            <-Map Join Operator [MAPJOIN_112] (rows=398230423 width=8)
                                Conds:MAPJOIN_111._col1=RS_105._col0(Inner),Output:["_col0","_col2","_col3"]
                              <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_105]
                                  PartitionCols:_col0
                                  Select Operator [SEL_104] (rows=960 width=8)
                                    Output:["_col0"]
                                    Filter Operator [FIL_103] (rows=960 width=108)
                                      predicate:((hd_vehicle_count > 0) and (hd_buy_potential) IN ('>10000         ', 'unknown        ') and CASE WHEN ((hd_vehicle_count > 0)) THEN (((UDFToDouble(hd_dep_count) / UDFToDouble(hd_vehicle_count)) > 1.0D)) ELSE (false) END)
                                      TableScan [TS_8] (rows=7200 width=108)
                                        default@household_demographics,household_demographics, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_buy_potential","hd_dep_count","hd_vehicle_count"]
                              <-Map Join Operator [MAPJOIN_111] (rows=2986728013 width=17)
                                  Conds:SEL_110._col4=RS_99._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                <-Map 5 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_99]
                                    PartitionCols:_col0
                                    Select Operator [SEL_98] (rows=71 width=8)
                                      Output:["_col0"]
                                      Filter Operator [FIL_97] (rows=71 width=16)
                                        predicate:(d_dom BETWEEN 1 AND 2 and (d_year) IN (2000, 2001, 2002))
                                        TableScan [TS_5] (rows=73049 width=16)
                                          default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_dom"]
                                  Dynamic Partitioning Event Operator [EVENT_102] (rows=35 width=8)
                                    Group By Operator [GBY_101] (rows=35 width=8)
                                      Output:["_col0"],keys:_col0
                                      Select Operator [SEL_100] (rows=71 width=8)
                                        Output:["_col0"]
                                         Please refer to the previous Select Operator [SEL_98]
                                <-Select Operator [SEL_110] (rows=76814649841 width=39)
                                    Output:["_col0","_col1","_col2","_col3","_col4"]
                                    Filter Operator [FIL_109] (rows=76814649841 width=39)
                                      predicate:(ss_hdemo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null)
                                      TableScan [TS_2] (rows=82510879939 width=39)
                                        default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk","ss_hdemo_sk","ss_store_sk","ss_ticket_number"]
              <-Select Operator [SEL_120] (rows=80000000 width=360)
                  Output:["_col0","_col1","_col2","_col3","_col4"]
                  TableScan [TS_0] (rows=80000000 width=360)
                    default@customer,customer, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_salutation","c_first_name","c_last_name","c_preferred_cust_flag"]

