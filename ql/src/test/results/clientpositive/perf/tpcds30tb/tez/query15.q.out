Plan optimized by CBO.

Vertex dependency in root stage
Map 4 <- Map 8 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Map 4 (CUSTOM_SIMPLE_EDGE), Reducer 2 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized, llap
      File Output Operator [FS_105]
        Limit [LIM_104] (rows=100 width=201)
          Number of rows:100
          Select Operator [SEL_103] (rows=9538 width=201)
            Output:["_col0","_col1"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_102]
              Group By Operator [GBY_101] (rows=9538 width=201)
                Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
              <-Reducer 5 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_100]
                  PartitionCols:_col0
                  Group By Operator [GBY_99] (rows=16596120 width=201)
                    Output:["_col0","_col1"],aggregations:["sum(_col7)"],keys:_col3
                    Select Operator [SEL_98] (rows=2146106610 width=207)
                      Output:["_col3","_col7"]
                      Top N Key Operator [TNK_97] (rows=2146106610 width=207)
                        keys:_col3,top n:100
                        Filter Operator [FIL_96] (rows=2146106610 width=207)
                          predicate:(_col9 or _col4 or _col5)
                          Map Join Operator [MAPJOIN_95] (rows=2146106610 width=207)
                            Conds:RS_94.KEY.reducesinkkey0=RS_87.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col3","_col4","_col5","_col7","_col9"]
                          <-Reducer 2 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                            PARTITION_ONLY_SHUFFLE [RS_94]
                              PartitionCols:_col0
                              Map Join Operator [MAPJOIN_93] (rows=80000000 width=105)
                                Conds:RS_90.KEY.reducesinkkey0=RS_92.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col3","_col4","_col5"]
                              <-Map 3 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                PARTITION_ONLY_SHUFFLE [RS_92]
                                  PartitionCols:_col0
                                  Select Operator [SEL_91] (rows=40000000 width=105)
                                    Output:["_col0","_col1","_col2","_col3"]
                                    TableScan [TS_3] (rows=40000000 width=183)
                                      default@customer_address,customer_address, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state","ca_zip"]
                              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                PARTITION_ONLY_SHUFFLE [RS_90]
                                  PartitionCols:_col1
                                  Select Operator [SEL_89] (rows=80000000 width=16)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_88] (rows=80000000 width=16)
                                      predicate:c_current_addr_sk is not null
                                      TableScan [TS_0] (rows=80000000 width=16)
                                        default@customer,customer, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk"]
                          <-Map 4 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                            PARTITION_ONLY_SHUFFLE [RS_87]
                              PartitionCols:_col0
                              Map Join Operator [MAPJOIN_86] (rows=2146106610 width=118)
                                Conds:SEL_85._col2=RS_80._col0(Inner),Output:["_col0","_col1","_col3"]
                              <-Map 8 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_80]
                                  PartitionCols:_col0
                                  Select Operator [SEL_79] (rows=92 width=8)
                                    Output:["_col0"]
                                    Filter Operator [FIL_78] (rows=92 width=16)
                                      predicate:((d_year = 2000) and (d_qoy = 2))
                                      TableScan [TS_8] (rows=73049 width=16)
                                        default@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_qoy"]
                                Dynamic Partitioning Event Operator [EVENT_83] (rows=46 width=8)
                                  Group By Operator [GBY_82] (rows=46 width=8)
                                    Output:["_col0"],keys:_col0
                                    Select Operator [SEL_81] (rows=92 width=8)
                                      Output:["_col0"]
                                       Please refer to the previous Select Operator [SEL_79]
                              <-Select Operator [SEL_85] (rows=42899393143 width=131)
                                  Output:["_col0","_col1","_col2","_col3"]
                                  Filter Operator [FIL_84] (rows=42899393143 width=127)
                                    predicate:cs_bill_customer_sk is not null
                                    TableScan [TS_5] (rows=43005109025 width=127)
                                      default@catalog_sales,catalog_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_bill_customer_sk","cs_sales_price"]

