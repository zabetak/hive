Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 5 (BROADCAST_EDGE), Reducer 9 (BROADCAST_EDGE)
Map 7 <- Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 8 <- Map 7 (SIMPLE_EDGE)
Reducer 9 <- Map 6 (BROADCAST_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 4 vectorized, llap
      File Output Operator [FS_176]
        Limit [LIM_175] (rows=100 width=394)
          Number of rows:100
          Select Operator [SEL_174] (rows=615 width=394)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 3 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_173]
              Select Operator [SEL_172] (rows=615 width=394)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Top N Key Operator [TNK_171] (rows=615 width=304)
                  keys:(grouping(_col3, 1L) + grouping(_col3, 0L)), CASE WHEN (((grouping(_col3, 1L) + grouping(_col3, 0L)) = 0L)) THEN (_col0) ELSE (null) END, rank_window_0,top n:100
                  PTF Operator [PTF_170] (rows=615 width=304)
                    Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col2 DESC NULLS FIRST","partition by:":"(grouping(_col3, 1L) + grouping(_col3, 0L)), CASE WHEN ((grouping(_col3, 0L) = UDFToLong(0))) THEN (_col0) ELSE (CAST( null AS CHAR(2))) END"}]
                    Select Operator [SEL_169] (rows=615 width=304)
                      Output:["_col0","_col1","_col2","_col3"]
                    <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                      SHUFFLE [RS_168]
                        PartitionCols:(grouping(_col3, 1L) + grouping(_col3, 0L)), CASE WHEN ((grouping(_col3, 0L) = UDFToLong(0))) THEN (_col0) ELSE (CAST( null AS CHAR(2))) END
                        Select Operator [SEL_167] (rows=615 width=304)
                          Output:["_col0","_col1","_col2","_col3"]
                          Group By Operator [GBY_166] (rows=615 width=304)
                            Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                          <-Map 1 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_165]
                              PartitionCols:_col0, _col1, _col2
                              Group By Operator [GBY_164] (rows=10752660 width=304)
                                Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(_col2)"],keys:_col0, _col1, 0L
                                Select Operator [SEL_163] (rows=15840066266 width=282)
                                  Output:["_col0","_col1","_col2"]
                                  Map Join Operator [MAPJOIN_162] (rows=15840066266 width=282)
                                    Conds:MAPJOIN_161._col0=RS_158._col0(Inner),Output:["_col1","_col6","_col7"]
                                  <-Reducer 9 [BROADCAST_EDGE] vectorized, llap
                                    BROADCAST [RS_158]
                                      PartitionCols:_col0
                                      Map Join Operator [MAPJOIN_157] (rows=542 width=192)
                                        Conds:RS_142._col2=SEL_156._col0(Inner),Output:["_col0","_col1","_col2"]
                                      <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_142]
                                          PartitionCols:_col2
                                          Select Operator [SEL_140] (rows=1704 width=192)
                                            Output:["_col0","_col1","_col2"]
                                            Filter Operator [FIL_139] (rows=1704 width=192)
                                              predicate:s_state is not null
                                              TableScan [TS_6] (rows=1704 width=192)
                                                default@store,store, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_county","s_state"]
                                      <-Select Operator [SEL_156] (rows=14 width=86)
                                          Output:["_col0"]
                                          Filter Operator [FIL_155] (rows=14 width=198)
                                            predicate:(rank_window_0 <= 5)
                                            PTF Operator [PTF_154] (rows=44 width=198)
                                              Function definitions:[{},{"name:":"windowingtablefunction","order by:":"_col1 DESC NULLS FIRST","partition by:":"_col0"}]
                                              Select Operator [SEL_153] (rows=44 width=198)
                                                Output:["_col0","_col1"]
                                              <-Reducer 8 [SIMPLE_EDGE] vectorized, llap
                                                SHUFFLE [RS_152]
                                                  PartitionCols:_col0
                                                  Top N Key Operator [TNK_151] (rows=44 width=198)
                                                    PartitionCols:_col0,keys:_col0, _col1,top n:6
                                                    Group By Operator [GBY_150] (rows=44 width=198)
                                                      Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
                                                    <-Map 7 [SIMPLE_EDGE] vectorized, llap
                                                      SHUFFLE [RS_149]
                                                        PartitionCols:_col0
                                                        Group By Operator [GBY_148] (rows=502480 width=198)
                                                          Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col5
                                                          Map Join Operator [MAPJOIN_147] (rows=15840066266 width=184)
                                                            Conds:MAPJOIN_146._col0=RS_143._col0(Inner),Output:["_col1","_col5"]
                                                          <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                                            BROADCAST [RS_143]
                                                              PartitionCols:_col0
                                                              Select Operator [SEL_141] (rows=1704 width=94)
                                                                Output:["_col0","_col1"]
                                                                 Please refer to the previous Filter Operator [FIL_139]
                                                          <-Map Join Operator [MAPJOIN_146] (rows=15840066266 width=105)
                                                              Conds:SEL_145._col2=RS_133._col0(Inner),Output:["_col0","_col1"]
                                                            <-Map 5 [BROADCAST_EDGE] vectorized, llap
                                                              BROADCAST [RS_133]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_130] (rows=359 width=12)
                                                                  Output:["_col0"]
                                                                  Filter Operator [FIL_129] (rows=359 width=12)
                                                                    predicate:d_month_seq BETWEEN 1212 AND 1223
                                                                    TableScan [TS_3] (rows=73049 width=12)
                                                                      default@date_dim,d1, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_month_seq"]
                                                            <-Select Operator [SEL_145] (rows=80569240632 width=125)
                                                                Output:["_col0","_col1","_col2"]
                                                                Filter Operator [FIL_144] (rows=80569240632 width=125)
                                                                  predicate:ss_store_sk is not null
                                                                  TableScan [TS_9] (rows=82510879939 width=125)
                                                                    default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_store_sk","ss_net_profit"]
                                  <-Map Join Operator [MAPJOIN_161] (rows=15840066266 width=105)
                                      Conds:SEL_160._col2=RS_131._col0(Inner),Output:["_col0","_col1"]
                                    <-Map 5 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_131]
                                        PartitionCols:_col0
                                         Please refer to the previous Select Operator [SEL_130]
                                    <-Select Operator [SEL_160] (rows=80569240632 width=125)
                                        Output:["_col0","_col1","_col2"]
                                        Filter Operator [FIL_159] (rows=80569240632 width=125)
                                          predicate:ss_store_sk is not null
                                          TableScan [TS_0] (rows=82510879939 width=125)
                                            default@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_store_sk","ss_net_profit"]

