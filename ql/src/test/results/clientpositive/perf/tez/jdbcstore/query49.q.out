Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 12 (BROADCAST_EDGE)
Map 13 <- Reducer 11 (BROADCAST_EDGE)
Map 14 <- Map 12 (BROADCAST_EDGE)
Map 20 <- Reducer 19 (BROADCAST_EDGE)
Map 21 <- Map 12 (BROADCAST_EDGE)
Map 27 <- Reducer 26 (BROADCAST_EDGE)
Reducer 10 <- Reducer 9 (SIMPLE_EDGE)
Reducer 11 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 15 <- Map 14 (CUSTOM_SIMPLE_EDGE), Map 20 (CUSTOM_SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 19 <- Map 14 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 13 (CUSTOM_SIMPLE_EDGE)
Reducer 22 <- Map 21 (CUSTOM_SIMPLE_EDGE), Map 27 (CUSTOM_SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (SIMPLE_EDGE)
Reducer 24 <- Reducer 23 (SIMPLE_EDGE)
Reducer 25 <- Reducer 24 (SIMPLE_EDGE), Union 8 (CONTAINS)
Reducer 26 <- Map 21 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE), Union 6 (CONTAINS)
Reducer 7 <- Union 6 (SIMPLE_EDGE), Union 8 (CONTAINS)
Reducer 9 <- Union 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 10 vectorized, llap
      File Output Operator [FS_320]
        Limit [LIM_319] (rows=100 width=219)
          Number of rows:100
          Select Operator [SEL_318] (rows=15744 width=219)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 9 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_317]
              Select Operator [SEL_316] (rows=15744 width=219)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                Group By Operator [GBY_315] (rows=15744 width=219)
                  Output:["_col0","_col1","_col2","_col3","_col4"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 8 [SIMPLE_EDGE]
                  <-Reducer 25 [CONTAINS] vectorized, llap
                    Reduce Output Operator [RS_377]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_376] (rows=15744 width=219)
                        Output:["_col0","_col1","_col2","_col3","_col4"],keys:_col0, _col3, _col4, _col1, _col2
                        Top N Key Operator [TNK_375] (rows=15744 width=218)
                          keys:_col0, _col3, _col4, _col1, _col2,top n:100
                          Select Operator [SEL_374] (rows=5260 width=217)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Filter Operator [FIL_373] (rows=5260 width=252)
                              predicate:((_col0 <= 10) or (rank_window_1 <= 10))
                              PTF Operator [PTF_372] (rows=7891 width=252)
                                Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(CAST( _col4 AS decimal(15,4)) / CAST( _col5 AS decimal(15,4))) ASC NULLS LAST","partition by:":"0"}]
                                Select Operator [SEL_371] (rows=7891 width=252)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                <-Reducer 24 [SIMPLE_EDGE] vectorized, llap
                                  SHUFFLE [RS_370]
                                    PartitionCols:0
                                    Select Operator [SEL_369] (rows=7891 width=248)
                                      Output:["rank_window_0","_col0","_col1","_col2","_col3","_col4"]
                                      PTF Operator [PTF_368] (rows=7891 width=248)
                                        Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(CAST( _col1 AS decimal(15,4)) / CAST( _col2 AS decimal(15,4))) ASC NULLS LAST","partition by:":"0"}]
                                        Select Operator [SEL_367] (rows=7891 width=248)
                                          Output:["_col0","_col1","_col2","_col3","_col4"]
                                        <-Reducer 23 [SIMPLE_EDGE] vectorized, llap
                                          SHUFFLE [RS_366]
                                            PartitionCols:0
                                            Group By Operator [GBY_365] (rows=7891 width=248)
                                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)"],keys:KEY._col0
                                            <-Reducer 22 [SIMPLE_EDGE] vectorized, llap
                                              SHUFFLE [RS_364]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_363] (rows=2154243 width=248)
                                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col1)","sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0
                                                  Select Operator [SEL_362] (rows=700383924 width=99)
                                                    Output:["_col0","_col1","_col2","_col3","_col4"]
                                                    Map Join Operator [MAPJOIN_361] (rows=700383924 width=99)
                                                      Conds:RS_352.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_360.KEY.reducesinkkey0, KEY.reducesinkkey1(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col2","_col3","_col9","_col10"]
                                                    <-Map 27 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                      PARTITION_ONLY_SHUFFLE [RS_360]
                                                        PartitionCols:_col0, _col1
                                                        Select Operator [SEL_359] (rows=4230741828 width=127)
                                                          Output:["_col0","_col1","_col2","_col3"]
                                                          Filter Operator [FIL_358] (rows=4230741828 width=127)
                                                            predicate:((sr_return_amt > 10000) and sr_item_sk BETWEEN DynamicValue(RS_83_sts_ss_item_sk_min) AND DynamicValue(RS_83_sts_ss_item_sk_max) and in_bloom_filter(sr_item_sk, DynamicValue(RS_83_sts_ss_item_sk_bloom_filter)))
                                                            TableScan [TS_77] (rows=8634166995 width=127)
                                                              tpcds_bin_partitioned_orc_30000@store_returns,sr, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["sr_item_sk","sr_ticket_number","sr_return_quantity","sr_return_amt"]
                                                            <-Reducer 26 [BROADCAST_EDGE] vectorized, llap
                                                              BROADCAST [RS_357]
                                                                Group By Operator [GBY_356] (rows=1 width=24)
                                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                                <-Map 21 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                                  PARTITION_ONLY_SHUFFLE [RS_355]
                                                                    Group By Operator [GBY_354] (rows=1 width=24)
                                                                      Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                      Select Operator [SEL_353] (rows=700383924 width=8)
                                                                        Output:["_col0"]
                                                                        Map Join Operator [MAPJOIN_351] (rows=700383924 width=16)
                                                                          Conds:SEL_350._col5=RS_274._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                                        <-Map 12 [BROADCAST_EDGE] vectorized, llap
                                                                          BROADCAST [RS_274]
                                                                            PartitionCols:_col0
                                                                            Select Operator [SEL_269] (rows=31 width=8)
                                                                              Output:["_col0"]
                                                                              Filter Operator [FIL_268] (rows=31 width=16)
                                                                                predicate:((d_year = 2000) and (d_moy = 12))
                                                                                TableScan [TS_3] (rows=73049 width=16)
                                                                                  tpcds_bin_partitioned_orc_30000@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                                                        <-Select Operator [SEL_350] (rows=41255439970 width=246)
                                                                            Output:["_col0","_col1","_col2","_col3","_col5"]
                                                                            Filter Operator [FIL_349] (rows=41255439970 width=246)
                                                                              predicate:((ss_quantity > 0) and (ss_net_profit > 1) and (ss_net_paid > 0))
                                                                              TableScan [TS_71] (rows=82510879939 width=246)
                                                                                tpcds_bin_partitioned_orc_30000@store_sales,sts, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_item_sk","ss_ticket_number","ss_quantity","ss_net_paid","ss_net_profit"]
                                                    <-Map 21 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                      PARTITION_ONLY_SHUFFLE [RS_352]
                                                        PartitionCols:_col0, _col1
                                                         Please refer to the previous Map Join Operator [MAPJOIN_351]
                  <-Reducer 7 [CONTAINS] vectorized, llap
                    Reduce Output Operator [RS_314]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_313] (rows=15744 width=219)
                        Output:["_col0","_col1","_col2","_col3","_col4"],keys:_col0, _col3, _col4, _col1, _col2
                        Top N Key Operator [TNK_312] (rows=15744 width=218)
                          keys:_col0, _col3, _col4, _col1, _col2,top n:100
                          Select Operator [SEL_311] (rows=10484 width=219)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Group By Operator [GBY_310] (rows=10484 width=219)
                              Output:["_col0","_col1","_col2","_col3","_col4"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                            <-Union 6 [SIMPLE_EDGE]
                              <-Reducer 18 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_348]
                                  PartitionCols:_col0, _col1, _col2, _col3, _col4
                                  Group By Operator [GBY_347] (rows=10484 width=219)
                                    Output:["_col0","_col1","_col2","_col3","_col4"],keys:_col0, _col3, _col4, _col1, _col2
                                    Select Operator [SEL_346] (rows=5224 width=219)
                                      Output:["_col0","_col1","_col2","_col3","_col4"]
                                      Filter Operator [FIL_345] (rows=5224 width=252)
                                        predicate:((_col0 <= 10) or (rank_window_1 <= 10))
                                        PTF Operator [PTF_344] (rows=7836 width=252)
                                          Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(CAST( _col4 AS decimal(15,4)) / CAST( _col5 AS decimal(15,4))) ASC NULLS LAST","partition by:":"0"}]
                                          Select Operator [SEL_343] (rows=7836 width=252)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                          <-Reducer 17 [SIMPLE_EDGE] vectorized, llap
                                            SHUFFLE [RS_342]
                                              PartitionCols:0
                                              Select Operator [SEL_341] (rows=7836 width=248)
                                                Output:["rank_window_0","_col0","_col1","_col2","_col3","_col4"]
                                                PTF Operator [PTF_340] (rows=7836 width=248)
                                                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(CAST( _col1 AS decimal(15,4)) / CAST( _col2 AS decimal(15,4))) ASC NULLS LAST","partition by:":"0"}]
                                                  Select Operator [SEL_339] (rows=7836 width=248)
                                                    Output:["_col0","_col1","_col2","_col3","_col4"]
                                                  <-Reducer 16 [SIMPLE_EDGE] vectorized, llap
                                                    SHUFFLE [RS_338]
                                                      PartitionCols:0
                                                      Group By Operator [GBY_337] (rows=7836 width=248)
                                                        Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)"],keys:KEY._col0
                                                      <-Reducer 15 [SIMPLE_EDGE] vectorized, llap
                                                        SHUFFLE [RS_336]
                                                          PartitionCols:_col0
                                                          Group By Operator [GBY_335] (rows=3338136 width=248)
                                                            Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col1)","sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0
                                                            Select Operator [SEL_334] (rows=516526087 width=210)
                                                              Output:["_col0","_col1","_col2","_col3","_col4"]
                                                              Map Join Operator [MAPJOIN_333] (rows=516526087 width=210)
                                                                Conds:RS_324.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_332.KEY.reducesinkkey0, KEY.reducesinkkey1(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col2","_col3","_col9","_col10"]
                                                              <-Map 20 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                                PARTITION_ONLY_SHUFFLE [RS_332]
                                                                  PartitionCols:_col0, _col1
                                                                  Select Operator [SEL_331] (rows=2851846865 width=129)
                                                                    Output:["_col0","_col1","_col2","_col3"]
                                                                    Filter Operator [FIL_330] (rows=2851846865 width=129)
                                                                      predicate:((cr_return_amount > 10000) and cr_order_number BETWEEN DynamicValue(RS_44_cs_cs_order_number_min) AND DynamicValue(RS_44_cs_cs_order_number_max) and in_bloom_filter(cr_order_number, DynamicValue(RS_44_cs_cs_order_number_bloom_filter)))
                                                                      TableScan [TS_38] (rows=4320980099 width=129)
                                                                        tpcds_bin_partitioned_orc_30000@catalog_returns,cr, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_item_sk","cr_order_number","cr_return_quantity","cr_return_amount"]
                                                                      <-Reducer 19 [BROADCAST_EDGE] vectorized, llap
                                                                        BROADCAST [RS_329]
                                                                          Group By Operator [GBY_328] (rows=1 width=24)
                                                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=75175200)"]
                                                                          <-Map 14 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                                            PARTITION_ONLY_SHUFFLE [RS_327]
                                                                              Group By Operator [GBY_326] (rows=1 width=24)
                                                                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=75175200)"]
                                                                                Select Operator [SEL_325] (rows=485700857 width=16)
                                                                                  Output:["_col0"]
                                                                                  Map Join Operator [MAPJOIN_323] (rows=485700857 width=114)
                                                                                    Conds:SEL_322._col5=RS_272._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                                                  <-Map 12 [BROADCAST_EDGE] vectorized, llap
                                                                                    BROADCAST [RS_272]
                                                                                      PartitionCols:_col0
                                                                                       Please refer to the previous Select Operator [SEL_269]
                                                                                  <-Select Operator [SEL_322] (rows=28813423047 width=251)
                                                                                      Output:["_col0","_col1","_col2","_col3","_col5"]
                                                                                      Filter Operator [FIL_321] (rows=28813423047 width=251)
                                                                                        predicate:((cs_quantity > 0) and (cs_net_profit > 1) and (cs_net_paid > 0))
                                                                                        TableScan [TS_32] (rows=43005109025 width=251)
                                                                                          tpcds_bin_partitioned_orc_30000@catalog_sales,cs, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_item_sk","cs_order_number","cs_quantity","cs_net_paid","cs_net_profit"]
                                                              <-Map 14 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                                PARTITION_ONLY_SHUFFLE [RS_324]
                                                                  PartitionCols:_col0, _col1
                                                                   Please refer to the previous Map Join Operator [MAPJOIN_323]
                              <-Reducer 5 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_309]
                                  PartitionCols:_col0, _col1, _col2, _col3, _col4
                                  Group By Operator [GBY_308] (rows=10484 width=219)
                                    Output:["_col0","_col1","_col2","_col3","_col4"],keys:_col0, _col3, _col4, _col1, _col2
                                    Select Operator [SEL_307] (rows=5260 width=215)
                                      Output:["_col0","_col1","_col2","_col3","_col4"]
                                      Filter Operator [FIL_306] (rows=5260 width=252)
                                        predicate:((_col0 <= 10) or (rank_window_1 <= 10))
                                        PTF Operator [PTF_305] (rows=7891 width=252)
                                          Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(CAST( _col4 AS decimal(15,4)) / CAST( _col5 AS decimal(15,4))) ASC NULLS LAST","partition by:":"0"}]
                                          Select Operator [SEL_304] (rows=7891 width=252)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                          <-Reducer 4 [SIMPLE_EDGE] vectorized, llap
                                            SHUFFLE [RS_303]
                                              PartitionCols:0
                                              Select Operator [SEL_302] (rows=7891 width=248)
                                                Output:["rank_window_0","_col0","_col1","_col2","_col3","_col4"]
                                                PTF Operator [PTF_301] (rows=7891 width=248)
                                                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(CAST( _col1 AS decimal(15,4)) / CAST( _col2 AS decimal(15,4))) ASC NULLS LAST","partition by:":"0"}]
                                                  Select Operator [SEL_300] (rows=7891 width=248)
                                                    Output:["_col0","_col1","_col2","_col3","_col4"]
                                                  <-Reducer 3 [SIMPLE_EDGE] vectorized, llap
                                                    SHUFFLE [RS_299]
                                                      PartitionCols:0
                                                      Group By Operator [GBY_298] (rows=7891 width=248)
                                                        Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)","sum(VALUE._col3)"],keys:KEY._col0
                                                      <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                                                        SHUFFLE [RS_297]
                                                          PartitionCols:_col0
                                                          Group By Operator [GBY_296] (rows=1736020 width=248)
                                                            Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col1)","sum(_col2)","sum(_col3)","sum(_col4)"],keys:_col0
                                                            Select Operator [SEL_295] (rows=265858586 width=211)
                                                              Output:["_col0","_col1","_col2","_col3","_col4"]
                                                              Map Join Operator [MAPJOIN_294] (rows=265858586 width=211)
                                                                Conds:RS_285.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_293.KEY.reducesinkkey0, KEY.reducesinkkey1(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col2","_col3","_col9","_col10"]
                                                              <-Map 13 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                                PARTITION_ONLY_SHUFFLE [RS_293]
                                                                  PartitionCols:_col0, _col1
                                                                  Select Operator [SEL_292] (rows=1425604848 width=126)
                                                                    Output:["_col0","_col1","_col2","_col3"]
                                                                    Filter Operator [FIL_291] (rows=1425604848 width=126)
                                                                      predicate:((wr_return_amt > 10000) and wr_order_number BETWEEN DynamicValue(RS_12_ws_ws_order_number_min) AND DynamicValue(RS_12_ws_ws_order_number_max) and in_bloom_filter(wr_order_number, DynamicValue(RS_12_ws_ws_order_number_bloom_filter)))
                                                                      TableScan [TS_6] (rows=2160007345 width=126)
                                                                        tpcds_bin_partitioned_orc_30000@web_returns,wr, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_item_sk","wr_order_number","wr_return_quantity","wr_return_amt"]
                                                                      <-Reducer 11 [BROADCAST_EDGE] vectorized, llap
                                                                        BROADCAST [RS_290]
                                                                          Group By Operator [GBY_289] (rows=1 width=24)
                                                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=30611510)"]
                                                                          <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                                            PARTITION_ONLY_SHUFFLE [RS_288]
                                                                              Group By Operator [GBY_287] (rows=1 width=24)
                                                                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=30611510)"]
                                                                                Select Operator [SEL_286] (rows=245626764 width=16)
                                                                                  Output:["_col0"]
                                                                                  Map Join Operator [MAPJOIN_284] (rows=245626764 width=131)
                                                                                    Conds:SEL_283._col5=RS_270._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                                                  <-Map 12 [BROADCAST_EDGE] vectorized, llap
                                                                                    BROADCAST [RS_270]
                                                                                      PartitionCols:_col0
                                                                                       Please refer to the previous Select Operator [SEL_269]
                                                                                  <-Select Operator [SEL_283] (rows=14468407759 width=251)
                                                                                      Output:["_col0","_col1","_col2","_col3","_col5"]
                                                                                      Filter Operator [FIL_282] (rows=14468407759 width=251)
                                                                                        predicate:((ws_quantity > 0) and (ws_net_profit > 1) and (ws_net_paid > 0))
                                                                                        TableScan [TS_0] (rows=21594638446 width=251)
                                                                                          tpcds_bin_partitioned_orc_30000@web_sales,ws, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_item_sk","ws_order_number","ws_quantity","ws_net_paid","ws_net_profit"]
                                                              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                                PARTITION_ONLY_SHUFFLE [RS_285]
                                                                  PartitionCols:_col0, _col1
                                                                   Please refer to the previous Map Join Operator [MAPJOIN_284]

