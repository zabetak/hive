Plan optimized by CBO.

Vertex dependency in root stage
Map 4 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 3 (CUSTOM_SIMPLE_EDGE)
Reducer 5 <- Map 3 (CUSTOM_SIMPLE_EDGE), Map 4 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 2 (CUSTOM_SIMPLE_EDGE), Reducer 6 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8 vectorized, llap
      File Output Operator [FS_183]
        Limit [LIM_182] (rows=100 width=598)
          Number of rows:100
          Select Operator [SEL_181] (rows=64869023 width=598)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_180]
              Select Operator [SEL_179] (rows=64869023 width=598)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                Top N Key Operator [TNK_178] (rows=64869023 width=598)
                  keys:_col3, _col2, _col5, _col8, _col6,top n:100
                  Filter Operator [FIL_177] (rows=64869023 width=598)
                    predicate:(_col5 <> _col8)
                    Map Join Operator [MAPJOIN_176] (rows=64869023 width=598)
                      Conds:RS_175.KEY.reducesinkkey0=RS_170.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col2","_col3","_col5","_col6","_col8","_col9","_col10"]
                    <-Reducer 2 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                      PARTITION_ONLY_SHUFFLE [RS_175]
                        PartitionCols:_col0
                        Map Join Operator [MAPJOIN_174] (rows=80000000 width=281)
                          Conds:RS_173.KEY.reducesinkkey0=RS_163.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col2","_col3","_col5"]
                        <-Map 3 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_163]
                            PartitionCols:_col0
                            Select Operator [SEL_162] (rows=40000000 width=101)
                              Output:["_col0","_col1"]
                              TableScan [TS_3] (rows=40000000 width=101)
                                tpcds_bin_partitioned_orc_30000@customer_address,current_addr, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_city"]
                        <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_173]
                            PartitionCols:_col1
                            Select Operator [SEL_172] (rows=80000000 width=196)
                              Output:["_col0","_col1","_col2","_col3"]
                              Filter Operator [FIL_171] (rows=80000000 width=196)
                                predicate:c_current_addr_sk is not null
                                TableScan [TS_0] (rows=80000000 width=196)
                                  tpcds_bin_partitioned_orc_30000@customer,customer, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk","c_first_name","c_last_name"]
                    <-Reducer 6 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                      PARTITION_ONLY_SHUFFLE [RS_170]
                        PartitionCols:_col1
                        Select Operator [SEL_169] (rows=64869023 width=325)
                          Output:["_col0","_col1","_col2","_col3","_col4"]
                          Group By Operator [GBY_168] (rows=64869023 width=325)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                          <-Reducer 5 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_167]
                              PartitionCols:_col0, _col1, _col2, _col3
                              Group By Operator [GBY_166] (rows=64869023 width=325)
                                Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col5)","sum(_col6)"],keys:_col0, _col12, _col2, _col4
                                Map Join Operator [MAPJOIN_165] (rows=64869023 width=101)
                                  Conds:RS_161.KEY.reducesinkkey0=RS_164.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col2","_col4","_col5","_col6","_col12"]
                                <-Map 3 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                  PARTITION_ONLY_SHUFFLE [RS_164]
                                    PartitionCols:_col0
                                     Please refer to the previous Select Operator [SEL_162]
                                <-Map 4 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                  PARTITION_ONLY_SHUFFLE [RS_161]
                                    PartitionCols:_col2
                                    Map Join Operator [MAPJOIN_160] (rows=64869023 width=8)
                                      Conds:MAPJOIN_159._col1=RS_155._col0(Inner),Output:["_col0","_col2","_col4","_col5","_col6"]
                                    <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_155]
                                        PartitionCols:_col0
                                        Select Operator [SEL_154] (rows=1920 width=8)
                                          Output:["_col0"]
                                          Filter Operator [FIL_153] (rows=1920 width=16)
                                            predicate:((hd_vehicle_count = 1) or (hd_dep_count = 2))
                                            TableScan [TS_14] (rows=7200 width=16)
                                              tpcds_bin_partitioned_orc_30000@household_demographics,household_demographics, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                    <-Map Join Operator [MAPJOIN_159] (rows=243258823 width=8)
                                        Conds:MAPJOIN_158._col3=RS_152._col0(Inner),Output:["_col0","_col1","_col2","_col4","_col5","_col6"]
                                      <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_152]
                                          PartitionCols:_col0
                                          Select Operator [SEL_151] (rows=32 width=8)
                                            Output:["_col0"]
                                            Filter Operator [FIL_150] (rows=32 width=101)
                                              predicate:(s_city) IN ('Cedar Grove', 'Wildwood', 'Union', 'Salem', 'Highland Park')
                                              TableScan [TS_11] (rows=1704 width=101)
                                                tpcds_bin_partitioned_orc_30000@store,store, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_city"]
                                      <-Map Join Operator [MAPJOIN_158] (rows=12938319718 width=229)
                                          Conds:SEL_157._col7=RS_146._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                        <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                          BROADCAST [RS_146]
                                            PartitionCols:_col0
                                            Select Operator [SEL_145] (rows=315 width=8)
                                              Output:["_col0"]
                                              Filter Operator [FIL_144] (rows=315 width=16)
                                                predicate:((d_year) IN (1998, 1999, 2000) and (d_dow) IN (6, 0))
                                                TableScan [TS_8] (rows=73049 width=16)
                                                  tpcds_bin_partitioned_orc_30000@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_dow"]
                                          Dynamic Partitioning Event Operator [EVENT_149] (rows=157 width=8)
                                            Group By Operator [GBY_148] (rows=157 width=8)
                                              Output:["_col0"],keys:_col0
                                              Select Operator [SEL_147] (rows=315 width=8)
                                                Output:["_col0"]
                                                 Please refer to the previous Select Operator [SEL_145]
                                        <-Select Operator [SEL_157] (rows=75002212194 width=265)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                            Filter Operator [FIL_156] (rows=75002212194 width=265)
                                              predicate:(ss_addr_sk is not null and ss_hdemo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null)
                                              TableScan [TS_5] (rows=82510879939 width=265)
                                                tpcds_bin_partitioned_orc_30000@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_ticket_number","ss_coupon_amt","ss_net_profit"]

