Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE)
Map 12 <- Reducer 9 (BROADCAST_EDGE)
Map 13 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE)
Map 16 <- Reducer 15 (BROADCAST_EDGE)
Map 17 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE)
Map 20 <- Reducer 19 (BROADCAST_EDGE)
Map 21 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE)
Map 28 <- Reducer 27 (BROADCAST_EDGE)
Map 29 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE)
Map 32 <- Reducer 31 (BROADCAST_EDGE)
Map 33 <- Map 10 (BROADCAST_EDGE), Map 11 (BROADCAST_EDGE)
Map 36 <- Reducer 35 (BROADCAST_EDGE)
Reducer 14 <- Map 13 (CUSTOM_SIMPLE_EDGE), Map 16 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 15 <- Map 13 (CUSTOM_SIMPLE_EDGE)
Reducer 18 <- Map 17 (CUSTOM_SIMPLE_EDGE), Map 20 (CUSTOM_SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 19 <- Map 17 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 12 (CUSTOM_SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 22 <- Map 21 (CUSTOM_SIMPLE_EDGE), Map 28 (CUSTOM_SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 24 <- Union 23 (SIMPLE_EDGE), Union 25 (CONTAINS)
Reducer 26 <- Union 25 (SIMPLE_EDGE)
Reducer 27 <- Map 21 (CUSTOM_SIMPLE_EDGE)
Reducer 30 <- Map 29 (CUSTOM_SIMPLE_EDGE), Map 32 (CUSTOM_SIMPLE_EDGE), Union 23 (CONTAINS)
Reducer 31 <- Map 29 (CUSTOM_SIMPLE_EDGE)
Reducer 34 <- Map 33 (CUSTOM_SIMPLE_EDGE), Map 36 (CUSTOM_SIMPLE_EDGE), Union 25 (CONTAINS)
Reducer 35 <- Map 33 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Union 3 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 6 <- Union 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 26 (CUSTOM_SIMPLE_EDGE), Reducer 6 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Map 1 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 8 vectorized, llap
      File Output Operator [FS_656]
        Select Operator [SEL_655] (rows=100 width=160)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8","_col9"]
          Limit [LIM_654] (rows=100 width=152)
            Number of rows:100
            Select Operator [SEL_653] (rows=10690826195042 width=151)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
            <-Reducer 7 [SIMPLE_EDGE] vectorized, llap
              SHUFFLE [RS_652]
                Select Operator [SEL_651] (rows=10690826195042 width=151)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                  Top N Key Operator [TNK_650] (rows=10690826195042 width=255)
                    keys:(_col10 - _col4),top n:100
                    Filter Operator [FIL_649] (rows=10690826195042 width=255)
                      predicate:((CAST( _col10 AS decimal(17,2)) / CAST( _col4 AS decimal(17,2))) < 0.9)
                      Map Join Operator [MAPJOIN_648] (rows=32072478585127 width=255)
                        Conds:RS_644.KEY.reducesinkkey0, KEY.reducesinkkey1, KEY.reducesinkkey2, KEY.reducesinkkey3=RS_647.KEY.reducesinkkey0, KEY.reducesinkkey1, KEY.reducesinkkey2, KEY.reducesinkkey3(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col10","_col11"]
                      <-Reducer 26 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                        PARTITION_ONLY_SHUFFLE [RS_647]
                          PartitionCols:_col0, _col1, _col2, _col3
                          Group By Operator [GBY_646] (rows=177920028 width=135)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3
                            Group By Operator [GBY_645] (rows=7061070159 width=131)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5
                            <-Union 25 [SIMPLE_EDGE]
                              <-Reducer 24 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_707]
                                  PartitionCols:_col0, _col1, _col2, _col3
                                  Group By Operator [GBY_706] (rows=7061070159 width=131)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                    Group By Operator [GBY_705] (rows=6029744178 width=131)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5
                                    <-Union 23 [SIMPLE_EDGE]
                                      <-Reducer 22 [CONTAINS] vectorized, llap
                                        Reduce Output Operator [RS_704]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5
                                          Group By Operator [GBY_703] (rows=6029744178 width=131)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                            Select Operator [SEL_702] (rows=2017213214 width=131)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                              Map Join Operator [MAPJOIN_701] (rows=2017213214 width=192)
                                                Conds:RS_692.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_700.KEY.reducesinkkey0, KEY.reducesinkkey1(Left Outer),DynamicPartitionHashJoin:true,Output:["_col2","_col3","_col7","_col8","_col9","_col10","_col13","_col14"]
                                              <-Map 28 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_700]
                                                  PartitionCols:_col0, _col1
                                                  Select Operator [SEL_699] (rows=4320980099 width=129)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_698] (rows=4320980099 width=129)
                                                      predicate:(cr_item_sk BETWEEN DynamicValue(RS_99_catalog_sales_cs_item_sk_min) AND DynamicValue(RS_99_catalog_sales_cs_item_sk_max) and in_bloom_filter(cr_item_sk, DynamicValue(RS_99_catalog_sales_cs_item_sk_bloom_filter)))
                                                      TableScan [TS_91] (rows=4320980099 width=129)
                                                        tpcds_bin_partitioned_orc_30000@catalog_returns,catalog_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_item_sk","cr_order_number","cr_return_quantity","cr_return_amount"]
                                                      <-Reducer 27 [BROADCAST_EDGE] vectorized, llap
                                                        BROADCAST [RS_697]
                                                          Group By Operator [GBY_696] (rows=1 width=24)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                          <-Map 21 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                            PARTITION_ONLY_SHUFFLE [RS_695]
                                                              Group By Operator [GBY_694] (rows=1 width=24)
                                                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                Select Operator [SEL_693] (rows=772490513 width=8)
                                                                  Output:["_col0"]
                                                                  Map Join Operator [MAPJOIN_691] (rows=772490513 width=131)
                                                                    Conds:MAPJOIN_690._col0=RS_620._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col8","_col9","_col10"]
                                                                  <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                                                    BROADCAST [RS_620]
                                                                      PartitionCols:_col0
                                                                      Select Operator [SEL_616] (rows=41585 width=23)
                                                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                        Filter Operator [FIL_615] (rows=41585 width=113)
                                                                          predicate:((i_category = 'Sports                                            ') and i_manufact_id is not null and i_category_id is not null and i_brand_id is not null and i_class_id is not null)
                                                                          TableScan [TS_6] (rows=462000 width=113)
                                                                            tpcds_bin_partitioned_orc_30000@item,item, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id","i_category","i_manufact_id"]
                                                                  <-Map Join Operator [MAPJOIN_690] (rows=8582195972 width=130)
                                                                      Conds:SEL_689._col4=RS_597._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                                    <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                                      BROADCAST [RS_597]
                                                                        PartitionCols:_col0
                                                                        Select Operator [SEL_588] (rows=367 width=8)
                                                                          Output:["_col0"]
                                                                          Filter Operator [FIL_584] (rows=367 width=12)
                                                                            predicate:(d_year = 2002)
                                                                            TableScan [TS_3] (rows=73049 width=12)
                                                                              tpcds_bin_partitioned_orc_30000@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                                                    <-Select Operator [SEL_689] (rows=43005109025 width=139)
                                                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                        TableScan [TS_82] (rows=43005109025 width=139)
                                                                          tpcds_bin_partitioned_orc_30000@catalog_sales,catalog_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_item_sk","cs_order_number","cs_quantity","cs_ext_sales_price"]
                                              <-Map 21 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_692]
                                                  PartitionCols:_col0, _col1
                                                   Please refer to the previous Map Join Operator [MAPJOIN_691]
                                      <-Reducer 30 [CONTAINS] vectorized, llap
                                        Reduce Output Operator [RS_723]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5
                                          Group By Operator [GBY_722] (rows=6029744178 width=131)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                            Select Operator [SEL_721] (rows=4012530964 width=131)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                              Map Join Operator [MAPJOIN_720] (rows=4012530964 width=152)
                                                Conds:RS_711.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_719.KEY.reducesinkkey0, KEY.reducesinkkey1(Left Outer),DynamicPartitionHashJoin:true,Output:["_col2","_col3","_col7","_col8","_col9","_col10","_col13","_col14"]
                                              <-Map 32 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_719]
                                                  PartitionCols:_col0, _col1
                                                  Select Operator [SEL_718] (rows=8634166995 width=127)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_717] (rows=8634166995 width=127)
                                                      predicate:(sr_item_sk BETWEEN DynamicValue(RS_120_store_sales_ss_item_sk_min) AND DynamicValue(RS_120_store_sales_ss_item_sk_max) and in_bloom_filter(sr_item_sk, DynamicValue(RS_120_store_sales_ss_item_sk_bloom_filter)))
                                                      TableScan [TS_112] (rows=8634166995 width=127)
                                                        tpcds_bin_partitioned_orc_30000@store_returns,store_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["sr_item_sk","sr_ticket_number","sr_return_quantity","sr_return_amt"]
                                                      <-Reducer 31 [BROADCAST_EDGE] vectorized, llap
                                                        BROADCAST [RS_716]
                                                          Group By Operator [GBY_715] (rows=1 width=24)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                          <-Map 29 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                            PARTITION_ONLY_SHUFFLE [RS_714]
                                                              Group By Operator [GBY_713] (rows=1 width=24)
                                                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                Select Operator [SEL_712] (rows=1492674976 width=8)
                                                                  Output:["_col0"]
                                                                  Map Join Operator [MAPJOIN_710] (rows=1492674976 width=31)
                                                                    Conds:MAPJOIN_709._col0=RS_621._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col8","_col9","_col10"]
                                                                  <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                                                    BROADCAST [RS_621]
                                                                      PartitionCols:_col0
                                                                       Please refer to the previous Select Operator [SEL_616]
                                                                  <-Map Join Operator [MAPJOIN_709] (rows=16583283491 width=118)
                                                                      Conds:SEL_708._col4=RS_599._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                                    <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                                      BROADCAST [RS_599]
                                                                        PartitionCols:_col0
                                                                        Select Operator [SEL_589] (rows=367 width=8)
                                                                          Output:["_col0"]
                                                                          Filter Operator [FIL_585] (rows=367 width=12)
                                                                            predicate:(d_year = 2002)
                                                                             Please refer to the previous TableScan [TS_3]
                                                                    <-Select Operator [SEL_708] (rows=82510879939 width=137)
                                                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                        TableScan [TS_103] (rows=82510879939 width=137)
                                                                          tpcds_bin_partitioned_orc_30000@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_item_sk","ss_ticket_number","ss_quantity","ss_ext_sales_price"]
                                              <-Map 29 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_711]
                                                  PartitionCols:_col0, _col1
                                                   Please refer to the previous Map Join Operator [MAPJOIN_710]
                              <-Reducer 34 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_739]
                                  PartitionCols:_col0, _col1, _col2, _col3
                                  Group By Operator [GBY_738] (rows=7061070159 width=131)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                    Select Operator [SEL_737] (rows=1031325981 width=131)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                      Map Join Operator [MAPJOIN_736] (rows=1031325981 width=192)
                                        Conds:RS_727.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_735.KEY.reducesinkkey0, KEY.reducesinkkey1(Left Outer),DynamicPartitionHashJoin:true,Output:["_col2","_col3","_col7","_col8","_col9","_col10","_col13","_col14"]
                                      <-Map 36 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_735]
                                          PartitionCols:_col0, _col1
                                          Select Operator [SEL_734] (rows=2160007345 width=126)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Filter Operator [FIL_733] (rows=2160007345 width=126)
                                              predicate:(wr_item_sk BETWEEN DynamicValue(RS_148_web_sales_ws_item_sk_min) AND DynamicValue(RS_148_web_sales_ws_item_sk_max) and in_bloom_filter(wr_item_sk, DynamicValue(RS_148_web_sales_ws_item_sk_bloom_filter)))
                                              TableScan [TS_140] (rows=2160007345 width=126)
                                                tpcds_bin_partitioned_orc_30000@web_returns,web_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_item_sk","wr_order_number","wr_return_quantity","wr_return_amt"]
                                              <-Reducer 35 [BROADCAST_EDGE] vectorized, llap
                                                BROADCAST [RS_732]
                                                  Group By Operator [GBY_731] (rows=1 width=24)
                                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                  <-Map 33 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                    PARTITION_ONLY_SHUFFLE [RS_730]
                                                      Group By Operator [GBY_729] (rows=1 width=24)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                        Select Operator [SEL_728] (rows=390660922 width=8)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_726] (rows=390660922 width=147)
                                                            Conds:MAPJOIN_725._col0=RS_622._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col8","_col9","_col10"]
                                                          <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                                            BROADCAST [RS_622]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_616]
                                                          <-Map Join Operator [MAPJOIN_725] (rows=4340155038 width=131)
                                                              Conds:SEL_724._col4=RS_601._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                            <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                              BROADCAST [RS_601]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_590] (rows=367 width=8)
                                                                  Output:["_col0"]
                                                                  Filter Operator [FIL_586] (rows=367 width=12)
                                                                    predicate:(d_year = 2002)
                                                                     Please refer to the previous TableScan [TS_3]
                                                            <-Select Operator [SEL_724] (rows=21594638446 width=139)
                                                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                TableScan [TS_131] (rows=21594638446 width=139)
                                                                  tpcds_bin_partitioned_orc_30000@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_item_sk","ws_order_number","ws_quantity","ws_ext_sales_price"]
                                      <-Map 33 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_727]
                                          PartitionCols:_col0, _col1
                                           Please refer to the previous Map Join Operator [MAPJOIN_726]
                      <-Reducer 6 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                        PARTITION_ONLY_SHUFFLE [RS_644]
                          PartitionCols:_col0, _col1, _col2, _col3
                          Group By Operator [GBY_643] (rows=177920028 width=135)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3
                            Group By Operator [GBY_642] (rows=7061070159 width=131)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5
                            <-Union 5 [SIMPLE_EDGE]
                              <-Reducer 18 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_688]
                                  PartitionCols:_col0, _col1, _col2, _col3
                                  Group By Operator [GBY_687] (rows=7061070159 width=131)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                    Select Operator [SEL_686] (rows=1031325981 width=131)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                      Map Join Operator [MAPJOIN_685] (rows=1031325981 width=192)
                                        Conds:RS_676.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_684.KEY.reducesinkkey0, KEY.reducesinkkey1(Left Outer),DynamicPartitionHashJoin:true,Output:["_col2","_col3","_col7","_col8","_col9","_col10","_col13","_col14"]
                                      <-Map 20 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_684]
                                          PartitionCols:_col0, _col1
                                          Select Operator [SEL_683] (rows=2160007345 width=126)
                                            Output:["_col0","_col1","_col2","_col3"]
                                            Filter Operator [FIL_682] (rows=2160007345 width=126)
                                              predicate:(wr_item_sk BETWEEN DynamicValue(RS_66_web_sales_ws_item_sk_min) AND DynamicValue(RS_66_web_sales_ws_item_sk_max) and in_bloom_filter(wr_item_sk, DynamicValue(RS_66_web_sales_ws_item_sk_bloom_filter)))
                                              TableScan [TS_58] (rows=2160007345 width=126)
                                                tpcds_bin_partitioned_orc_30000@web_returns,web_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_item_sk","wr_order_number","wr_return_quantity","wr_return_amt"]
                                              <-Reducer 19 [BROADCAST_EDGE] vectorized, llap
                                                BROADCAST [RS_681]
                                                  Group By Operator [GBY_680] (rows=1 width=24)
                                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                  <-Map 17 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                    PARTITION_ONLY_SHUFFLE [RS_679]
                                                      Group By Operator [GBY_678] (rows=1 width=24)
                                                        Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                        Select Operator [SEL_677] (rows=390660922 width=8)
                                                          Output:["_col0"]
                                                          Map Join Operator [MAPJOIN_675] (rows=390660922 width=147)
                                                            Conds:MAPJOIN_674._col0=RS_619._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col8","_col9","_col10"]
                                                          <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                                            BROADCAST [RS_619]
                                                              PartitionCols:_col0
                                                               Please refer to the previous Select Operator [SEL_616]
                                                          <-Map Join Operator [MAPJOIN_674] (rows=4340155038 width=131)
                                                              Conds:SEL_673._col4=RS_595._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                            <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                              BROADCAST [RS_595]
                                                                PartitionCols:_col0
                                                                Select Operator [SEL_587] (rows=367 width=8)
                                                                  Output:["_col0"]
                                                                  Filter Operator [FIL_583] (rows=367 width=12)
                                                                    predicate:(d_year = 2001)
                                                                     Please refer to the previous TableScan [TS_3]
                                                            <-Select Operator [SEL_673] (rows=21594638446 width=139)
                                                                Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                TableScan [TS_49] (rows=21594638446 width=139)
                                                                  tpcds_bin_partitioned_orc_30000@web_sales,web_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_item_sk","ws_order_number","ws_quantity","ws_ext_sales_price"]
                                      <-Map 17 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_676]
                                          PartitionCols:_col0, _col1
                                           Please refer to the previous Map Join Operator [MAPJOIN_675]
                              <-Reducer 4 [CONTAINS] vectorized, llap
                                Reduce Output Operator [RS_641]
                                  PartitionCols:_col0, _col1, _col2, _col3
                                  Group By Operator [GBY_640] (rows=7061070159 width=131)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                    Group By Operator [GBY_639] (rows=6029744178 width=131)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5
                                    <-Union 3 [SIMPLE_EDGE]
                                      <-Reducer 14 [CONTAINS] vectorized, llap
                                        Reduce Output Operator [RS_672]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5
                                          Group By Operator [GBY_671] (rows=6029744178 width=131)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                            Select Operator [SEL_670] (rows=4012530964 width=131)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                              Map Join Operator [MAPJOIN_669] (rows=4012530964 width=152)
                                                Conds:RS_660.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_668.KEY.reducesinkkey0, KEY.reducesinkkey1(Left Outer),DynamicPartitionHashJoin:true,Output:["_col2","_col3","_col7","_col8","_col9","_col10","_col13","_col14"]
                                              <-Map 16 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_668]
                                                  PartitionCols:_col0, _col1
                                                  Select Operator [SEL_667] (rows=8634166995 width=127)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_666] (rows=8634166995 width=127)
                                                      predicate:(sr_item_sk BETWEEN DynamicValue(RS_38_store_sales_ss_item_sk_min) AND DynamicValue(RS_38_store_sales_ss_item_sk_max) and in_bloom_filter(sr_item_sk, DynamicValue(RS_38_store_sales_ss_item_sk_bloom_filter)))
                                                      TableScan [TS_30] (rows=8634166995 width=127)
                                                        tpcds_bin_partitioned_orc_30000@store_returns,store_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["sr_item_sk","sr_ticket_number","sr_return_quantity","sr_return_amt"]
                                                      <-Reducer 15 [BROADCAST_EDGE] vectorized, llap
                                                        BROADCAST [RS_665]
                                                          Group By Operator [GBY_664] (rows=1 width=24)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                          <-Map 13 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                            PARTITION_ONLY_SHUFFLE [RS_663]
                                                              Group By Operator [GBY_662] (rows=1 width=24)
                                                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                Select Operator [SEL_661] (rows=1492674976 width=8)
                                                                  Output:["_col0"]
                                                                  Map Join Operator [MAPJOIN_659] (rows=1492674976 width=31)
                                                                    Conds:MAPJOIN_658._col0=RS_618._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col8","_col9","_col10"]
                                                                  <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                                                    BROADCAST [RS_618]
                                                                      PartitionCols:_col0
                                                                       Please refer to the previous Select Operator [SEL_616]
                                                                  <-Map Join Operator [MAPJOIN_658] (rows=16583283491 width=118)
                                                                      Conds:SEL_657._col4=RS_593._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                                    <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                                      BROADCAST [RS_593]
                                                                        PartitionCols:_col0
                                                                         Please refer to the previous Select Operator [SEL_587]
                                                                    <-Select Operator [SEL_657] (rows=82510879939 width=137)
                                                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                        TableScan [TS_21] (rows=82510879939 width=137)
                                                                          tpcds_bin_partitioned_orc_30000@store_sales,store_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_item_sk","ss_ticket_number","ss_quantity","ss_ext_sales_price"]
                                              <-Map 13 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_660]
                                                  PartitionCols:_col0, _col1
                                                   Please refer to the previous Map Join Operator [MAPJOIN_659]
                                      <-Reducer 2 [CONTAINS] vectorized, llap
                                        Reduce Output Operator [RS_638]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5
                                          Group By Operator [GBY_637] (rows=6029744178 width=131)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"],keys:_col0, _col1, _col2, _col3, _col4, _col5
                                            Select Operator [SEL_636] (rows=2017213214 width=131)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                              Map Join Operator [MAPJOIN_635] (rows=2017213214 width=192)
                                                Conds:RS_626.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_634.KEY.reducesinkkey0, KEY.reducesinkkey1(Left Outer),DynamicPartitionHashJoin:true,Output:["_col2","_col3","_col7","_col8","_col9","_col10","_col13","_col14"]
                                              <-Map 12 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_634]
                                                  PartitionCols:_col0, _col1
                                                  Select Operator [SEL_633] (rows=4320980099 width=129)
                                                    Output:["_col0","_col1","_col2","_col3"]
                                                    Filter Operator [FIL_632] (rows=4320980099 width=129)
                                                      predicate:(cr_item_sk BETWEEN DynamicValue(RS_17_catalog_sales_cs_item_sk_min) AND DynamicValue(RS_17_catalog_sales_cs_item_sk_max) and in_bloom_filter(cr_item_sk, DynamicValue(RS_17_catalog_sales_cs_item_sk_bloom_filter)))
                                                      TableScan [TS_9] (rows=4320980099 width=129)
                                                        tpcds_bin_partitioned_orc_30000@catalog_returns,catalog_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_item_sk","cr_order_number","cr_return_quantity","cr_return_amount"]
                                                      <-Reducer 9 [BROADCAST_EDGE] vectorized, llap
                                                        BROADCAST [RS_631]
                                                          Group By Operator [GBY_630] (rows=1 width=24)
                                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                          <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                            PARTITION_ONLY_SHUFFLE [RS_629]
                                                              Group By Operator [GBY_628] (rows=1 width=24)
                                                                Output:["_col0","_col1","_col2"],aggregations:["min(_col0)","max(_col0)","bloom_filter(_col0, expectedEntries=1000000)"]
                                                                Select Operator [SEL_627] (rows=772490513 width=8)
                                                                  Output:["_col0"]
                                                                  Map Join Operator [MAPJOIN_625] (rows=772490513 width=131)
                                                                    Conds:MAPJOIN_624._col0=RS_617._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col7","_col8","_col9","_col10"]
                                                                  <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                                                    BROADCAST [RS_617]
                                                                      PartitionCols:_col0
                                                                       Please refer to the previous Select Operator [SEL_616]
                                                                  <-Map Join Operator [MAPJOIN_624] (rows=8582195972 width=130)
                                                                      Conds:SEL_623._col4=RS_591._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                                                    <-Map 10 [BROADCAST_EDGE] vectorized, llap
                                                                      BROADCAST [RS_591]
                                                                        PartitionCols:_col0
                                                                         Please refer to the previous Select Operator [SEL_587]
                                                                    <-Select Operator [SEL_623] (rows=43005109025 width=139)
                                                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                                                        TableScan [TS_0] (rows=43005109025 width=139)
                                                                          tpcds_bin_partitioned_orc_30000@catalog_sales,catalog_sales, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_item_sk","cs_order_number","cs_quantity","cs_ext_sales_price"]
                                              <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                                PARTITION_ONLY_SHUFFLE [RS_626]
                                                  PartitionCols:_col0, _col1
                                                   Please refer to the previous Map Join Operator [MAPJOIN_625]

