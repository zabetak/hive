Plan optimized by CBO.

Vertex dependency in root stage
Map 15 <- Reducer 13 (BROADCAST_EDGE)
Map 4 <- Reducer 14 (BROADCAST_EDGE)
Map 5 <- Map 1 (BROADCAST_EDGE), Map 2 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE)
Reducer 10 <- Reducer 9 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Map 4 (CUSTOM_SIMPLE_EDGE), Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Map 5 (BROADCAST_EDGE), Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (CUSTOM_SIMPLE_EDGE)
Reducer 14 <- Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 15 (CUSTOM_SIMPLE_EDGE), Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 5 (CUSTOM_SIMPLE_EDGE), Reducer 6 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Reducer 12 (BROADCAST_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 10 vectorized, llap
      File Output Operator [FS_281]
        Group By Operator [GBY_280] (rows=1 width=232)
          Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
        <-Reducer 9 [CUSTOM_SIMPLE_EDGE] vectorized, llap
          PARTITION_ONLY_SHUFFLE [RS_279]
            Group By Operator [GBY_278] (rows=1 width=232)
              Output:["_col0","_col1","_col2"],aggregations:["count(_col0)","sum(_col1)","sum(_col2)"]
              Group By Operator [GBY_277] (rows=2159952 width=232)
                Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0
              <-Reducer 8 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_276]
                  PartitionCols:_col0
                  Group By Operator [GBY_275] (rows=2159952 width=232)
                    Output:["_col0","_col2","_col3"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col3
                    Map Join Operator [MAPJOIN_274] (rows=6463723 width=138)
                      Conds:RS_257._col3=GBY_273._col0(Inner),Output:["_col3","_col4","_col5"]
                    <-Reducer 12 [BROADCAST_EDGE] vectorized, llap
                      BROADCAST [RS_257]
                        PartitionCols:_col3
                        Map Join Operator [MAPJOIN_256] (rows=6463723 width=138)
                          Conds:RS_241._col3=GBY_255._col0(Inner),Output:["_col3","_col4","_col5"]
                        <-Map 5 [BROADCAST_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_241]
                            PartitionCols:_col3
                            Map Join Operator [MAPJOIN_240] (rows=6463723 width=138)
                              Conds:MAPJOIN_239._col0=RS_231._col0(Inner),Output:["_col3","_col4","_col5"]
                            <-Map 3 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_231]
                                PartitionCols:_col0
                                Select Operator [SEL_230] (rows=8116 width=64)
                                  Output:["_col0"]
                                  Filter Operator [FIL_229] (rows=8116 width=64)
                                    predicate:CAST( d_date AS TIMESTAMP) BETWEEN TIMESTAMP'1999-05-01 00:00:00' AND TIMESTAMP'1999-06-30 00:00:00'
                                    TableScan [TS_9] (rows=73049 width=64)
                                      tpcds_bin_partitioned_orc_30000@date_dim,date_dim, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                            <-Map Join Operator [MAPJOIN_239] (rows=58177483 width=228)
                                Conds:MAPJOIN_238._col2=RS_228._col0(Inner),Output:["_col0","_col3","_col4","_col5"]
                              <-Map 2 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_228]
                                  PartitionCols:_col0
                                  Select Operator [SEL_227] (rows=12 width=8)
                                    Output:["_col0"]
                                    Filter Operator [FIL_226] (rows=12 width=96)
                                      predicate:(web_company_name = 'pri                                               ')
                                      TableScan [TS_6] (rows=84 width=96)
                                        tpcds_bin_partitioned_orc_30000@web_site,web_site, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["web_site_sk","web_company_name"]
                              <-Map Join Operator [MAPJOIN_238] (rows=407242361 width=246)
                                  Conds:SEL_237._col1=RS_225._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col5"]
                                <-Map 1 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_225]
                                    PartitionCols:_col0
                                    Select Operator [SEL_224] (rows=754717 width=8)
                                      Output:["_col0"]
                                      Filter Operator [FIL_223] (rows=754717 width=94)
                                        predicate:(ca_state = 'TX')
                                        TableScan [TS_3] (rows=40000000 width=94)
                                          tpcds_bin_partitioned_orc_30000@customer_address,customer_address, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                                <-Select Operator [SEL_237] (rows=21583844790 width=255)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                    Filter Operator [FIL_233] (rows=21583844790 width=255)
                                      predicate:(ws_ship_addr_sk is not null and ws_web_site_sk is not null and ws_ship_date_sk is not null)
                                      TableScan [TS_25] (rows=21600036511 width=15)
                                        tpcds_bin_partitioned_orc_30000@web_sales,ws1, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number","ws_ship_date_sk","ws_ship_addr_sk","ws_web_site_sk","ws_ext_ship_cost","ws_net_profit"]
                        <-Group By Operator [GBY_255] (rows=1803141444 width=8)
                            Output:["_col0"],keys:KEY._col0
                          <-Reducer 11 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_254]
                              PartitionCols:_col0
                              Group By Operator [GBY_253] (rows=21600036511 width=8)
                                Output:["_col0"],keys:_col1
                                Select Operator [SEL_252] (rows=258749294920 width=23)
                                  Output:["_col1"]
                                  Filter Operator [FIL_251] (rows=258749294920 width=23)
                                    predicate:(_col0 <> _col2)
                                    Map Join Operator [MAPJOIN_250] (rows=258749294920 width=23)
                                      Conds:RS_236.KEY.reducesinkkey0=RS_249.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2"]
                                    <-Map 4 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                      PARTITION_ONLY_SHUFFLE [RS_249]
                                        PartitionCols:_col1
                                        Select Operator [SEL_248] (rows=21600036511 width=15)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_247] (rows=21600036511 width=15)
                                            predicate:(ws_order_number BETWEEN DynamicValue(RS_52_ws1_ws_order_number_min) AND DynamicValue(RS_52_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_52_ws1_ws_order_number_bloom_filter)))
                                            TableScan [TS_14] (rows=21600036511 width=15)
                                              tpcds_bin_partitioned_orc_30000@web_sales,ws2, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                            <-Reducer 14 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_246]
                                                Group By Operator [GBY_245] (rows=1 width=24)
                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                    <-Group By Operator [GBY_273] (rows=1317116406 width=8)
                        Output:["_col0"],keys:KEY._col0
                      <-Reducer 7 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_272]
                          PartitionCols:_col0
                          Group By Operator [GBY_271] (rows=2160007345 width=8)
                            Output:["_col0"],keys:_col2
                            Select Operator [SEL_270] (rows=309959254381 width=23)
                              Output:["_col2"]
                              Filter Operator [FIL_269] (rows=309959254381 width=23)
                                predicate:(_col0 <> _col3)
                                Map Join Operator [MAPJOIN_268] (rows=309959254381 width=23)
                                  Conds:RS_267.KEY.reducesinkkey0=RS_235.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col2","_col3"]
                                <-Map 5 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                  PARTITION_ONLY_SHUFFLE [RS_235]
                                    PartitionCols:_col1
                                    Select Operator [SEL_232] (rows=21600036511 width=15)
                                      Output:["_col0","_col1"]
                                       Please refer to the previous TableScan [TS_25]
                                <-Reducer 6 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                  PARTITION_ONLY_SHUFFLE [RS_267]
                                    PartitionCols:_col1
                                    Map Join Operator [MAPJOIN_266] (rows=25874973741 width=23)
                                      Conds:RS_234.KEY.reducesinkkey0=RS_265.KEY.reducesinkkey0(Inner),DynamicPartitionHashJoin:true,Output:["_col0","_col1","_col2"]
                                    <-Map 15 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                      PARTITION_ONLY_SHUFFLE [RS_265]
                                        PartitionCols:_col0
                                        Select Operator [SEL_264] (rows=2160007345 width=8)
                                          Output:["_col0"]
                                          Filter Operator [FIL_263] (rows=2160007345 width=8)
                                            predicate:(wr_order_number BETWEEN DynamicValue(RS_55_ws1_ws_order_number_min) AND DynamicValue(RS_55_ws1_ws_order_number_max) and in_bloom_filter(wr_order_number, DynamicValue(RS_55_ws1_ws_order_number_bloom_filter)))
                                            TableScan [TS_27] (rows=2160007345 width=8)
                                              tpcds_bin_partitioned_orc_30000@web_returns,web_returns, ACID table,Tbl:COMPLETE,Col:COMPLETE,Output:["wr_order_number"]
                                            <-Reducer 13 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_262]
                                                Group By Operator [GBY_261] (rows=1 width=24)
                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]

